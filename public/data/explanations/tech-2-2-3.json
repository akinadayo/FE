{
  "topicId": "tech-2-2-3",
  "title": "システムの信頼性",
  "pages": [
    {
      "id": 1,
      "title": "RAISの概念",
      "sections": [
        {
          "type": "text",
          "content": "システムの信頼性を評価する際、RASIS（ラシス）という5つの評価基準が使われます。これらは信頼性の高いシステムを設計・運用するための重要な指標です。"
        },
        {
          "type": "highlight",
          "icon": "💡",
          "title": "RASISとは",
          "content": "Reliability（信頼性）、Availability（可用性）、Serviceability（保守性）、Integrity（保全性）、Security（安全性）の5つの頭文字を取った指標です。"
        },
        {
          "type": "table",
          "headers": ["項目", "意味", "評価指標"],
          "rows": [
            ["Reliability（信頼性）", "故障しにくさ", "MTBF（平均故障間隔）"],
            ["Availability（可用性）", "使用可能な状態を維持する能力", "稼働率"],
            ["Serviceability（保守性）", "修理・保守のしやすさ", "MTTR（平均修理時間）"],
            ["Integrity（保全性）", "データの正確性・一貫性", "データ完全性"],
            ["Security（安全性）", "不正アクセスからの保護", "セキュリティ対策"]
          ]
        },
        {
          "type": "text",
          "content": "各要素の詳細を見てみましょう。"
        },
        {
          "type": "list",
          "items": [
            "信頼性（Reliability）：長時間連続稼働しても故障しない能力",
            "可用性（Availability）：必要な時にシステムが使える状態にある割合",
            "保守性（Serviceability）：故障時の修理時間の短さ、保守の容易さ",
            "保全性（Integrity）：データが破壊・改ざんされずに保たれること",
            "安全性（Security）：セキュリティ脅威から保護されていること"
          ]
        },
        {
          "type": "highlight",
          "icon": "📌",
          "title": "信頼性と可用性の違い",
          "content": "信頼性は「故障しにくさ」、可用性は「使える状態を維持する能力」です。故障が少なくても修理に時間がかかれば可用性は低下します。"
        },
        {
          "type": "example",
          "title": "例題：RASIS",
          "content": "システムが必要なときに使用可能な状態にある度合いを表すRASISの評価項目はどれか。\n\nア：Reliability\nイ：Availability\nウ：Serviceability\nエ：Integrity",
          "solution": "答え：イ\n\n解説：Availability（可用性）は、システムが必要なときに使用可能な状態にある度合いを表します。稼働率で評価されます。"
        }
      ]
    },
    {
      "id": 2,
      "title": "MTBFとMTTR",
      "sections": [
        {
          "type": "text",
          "content": "システムの信頼性と保守性を定量的に評価する指標として、MTBF（平均故障間隔）とMTTR（平均修理時間）があります。"
        },
        {
          "type": "highlight",
          "icon": "💡",
          "title": "MTBFとMTTR",
          "content": "MTBF（Mean Time Between Failures）は故障から次の故障までの平均時間、MTTR（Mean Time To Repair）は故障から修理完了までの平均時間です。"
        },
        {
          "type": "table",
          "headers": ["指標", "意味", "計算方法", "望ましい値"],
          "rows": [
            ["MTBF", "平均故障間隔", "総稼働時間 ÷ 故障回数", "長いほど良い"],
            ["MTTR", "平均修理時間", "総修理時間 ÷ 故障回数", "短いほど良い"]
          ]
        },
        {
          "type": "formula",
          "content": "MTBF = 総稼働時間 ÷ 故障回数",
          "explanation": "例：1000時間稼働して5回故障した場合、MTBF = 1000 ÷ 5 = 200時間"
        },
        {
          "type": "formula",
          "content": "MTTR = 総修理時間 ÷ 故障回数",
          "explanation": "例：5回の故障で合計25時間修理した場合、MTTR = 25 ÷ 5 = 5時間"
        },
        {
          "type": "text",
          "content": "これらの指標を使って可用性（稼働率）を計算できます。"
        },
        {
          "type": "formula",
          "content": "稼働率 = MTBF ÷ (MTBF + MTTR)",
          "explanation": "MTBFが長く、MTTRが短いほど稼働率は高くなります。"
        },
        {
          "type": "list",
          "items": [
            "MTBFを長くする方法：高品質な部品を使う、冗長化構成にする",
            "MTTRを短くする方法：予備部品を用意、保守体制を整備、ホットスワップ対応",
            "稼働率を上げるには両方のアプローチが必要",
            "24時間365日稼働が求められるシステムでは高い稼働率が必須"
          ]
        },
        {
          "type": "example",
          "title": "例題：MTBF計算",
          "content": "あるシステムが2000時間稼働し、その間に4回故障した。MTBFは何時間か。\n\nア：400時間\nイ：500時間\nウ：800時間\nエ：2000時間",
          "solution": "答え：イ\n\n解説：MTBF = 総稼働時間 ÷ 故障回数 = 2000 ÷ 4 = 500時間"
        }
      ]
    },
    {
      "id": 3,
      "title": "稼働率の計算",
      "sections": [
        {
          "type": "text",
          "content": "稼働率は、システムが正常に稼働している時間の割合を示す重要な指標です。直列接続と並列接続で計算方法が異なります。"
        },
        {
          "type": "highlight",
          "icon": "💡",
          "title": "基本的な稼働率",
          "content": "1台のシステムの稼働率は、MTBF ÷ (MTBF + MTTR) で計算します。または、稼働時間 ÷ 全体時間 でも求められます。"
        },
        {
          "type": "table",
          "headers": ["構成", "稼働率の計算式", "特徴"],
          "rows": [
            ["直列接続", "R1 × R2", "どちらか1つでも故障すると停止"],
            ["並列接続", "1 - (1-R1) × (1-R2)", "両方故障しないと停止しない"],
            ["3台並列", "1 - (1-R1) × (1-R2) × (1-R3)", "冗長性が高い"]
          ]
        },
        {
          "type": "text",
          "content": "直列接続と並列接続の稼働率計算を詳しく見てみましょう。"
        },
        {
          "type": "highlight",
          "icon": "⚡",
          "title": "直列接続（シリーズ）",
          "content": "複数のシステムが直列に接続され、すべてが正常に動作しないとシステム全体が停止します。稼働率は各システムの稼働率を掛け算します。"
        },
        {
          "type": "formula",
          "content": "直列接続の稼働率 = R1 × R2 × R3 × ...",
          "explanation": "例：稼働率0.9のシステムを2台直列接続すると、全体の稼働率は 0.9 × 0.9 = 0.81"
        },
        {
          "type": "highlight",
          "icon": "⚡",
          "title": "並列接続（パラレル）",
          "content": "複数のシステムが並列に接続され、どれか1台でも動作していればシステム全体は稼働します。冗長構成とも呼ばれます。"
        },
        {
          "type": "formula",
          "content": "並列接続の稼働率 = 1 - (1-R1) × (1-R2) × (1-R3) × ...",
          "explanation": "例：稼働率0.9のシステムを2台並列接続すると、全体の稼働率は 1 - (1-0.9) × (1-0.9) = 1 - 0.01 = 0.99"
        },
        {
          "type": "list",
          "items": [
            "直列：すべてが正常でないと動作しない（AND条件）",
            "並列：どれか1つでも正常なら動作する（OR条件）",
            "並列接続により可用性が大幅に向上",
            "複雑な構成では、部分ごとに計算して組み合わせる"
          ]
        },
        {
          "type": "example",
          "title": "例題：並列接続の稼働率",
          "content": "稼働率0.8のシステムを2台並列に接続した場合の全体の稼働率はいくらか。\n\nア：0.64\nイ：0.8\nウ：0.96\nエ：1.6",
          "solution": "答え：ウ\n\n解説：\n並列接続の稼働率 = 1 - (1-0.8) × (1-0.8)\n                = 1 - 0.2 × 0.2\n                = 1 - 0.04 = 0.96"
        }
      ]
    },
    {
      "id": 4,
      "title": "冗長化技術",
      "sections": [
        {
          "type": "text",
          "content": "システムの可用性を高めるために、様々な冗長化技術が使われます。目的や要件に応じて適切な方式を選択します。"
        },
        {
          "type": "table",
          "headers": ["方式", "動作", "特徴", "用途"],
          "rows": [
            ["デュアルシステム", "2台が同時に同じ処理を実行", "高信頼性、コスト高", "金融システム"],
            ["デュプレックスシステム", "1台が稼働、1台が待機", "切替時間あり、コスト低", "一般業務システム"],
            ["ホットスタンバイ", "待機系も起動済み", "切替が高速", "重要システム"],
            ["コールドスタンバイ", "待機系は停止状態", "切替に時間、コスト低", "緊急時のみ"]
          ]
        },
        {
          "type": "highlight",
          "icon": "💡",
          "title": "デュアルシステム",
          "content": "2台のコンピュータが常に同じ処理を並行して実行し、結果を照合します。一方が故障しても即座に他方で処理を継続できます。"
        },
        {
          "type": "highlight",
          "icon": "💡",
          "title": "デュプレックスシステム",
          "content": "現用系と待機系の2台構成で、現用系が故障したら待機系に切り替えます。デュアルより安価ですが切替に時間がかかります。"
        },
        {
          "type": "text",
          "content": "その他の信頼性向上技術も理解しましょう。"
        },
        {
          "type": "list",
          "items": [
            "フォールトトレラント：障害が発生しても処理を継続",
            "フェールセーフ：障害時に安全な状態に移行",
            "フェールソフト：障害時に機能を縮退して運転継続",
            "フェールオーバー：障害時に自動的に待機系に切替",
            "ロールバック：障害前の状態に戻す"
          ]
        },
        {
          "type": "table",
          "headers": ["技術", "動作", "例"],
          "rows": [
            ["フォールトトレラント", "障害があっても正常動作", "デュアルシステム、RAID"],
            ["フェールセーフ", "安全側に制御", "信号機の故障時は全赤点滅"],
            ["フェールソフト", "機能縮退して継続", "エンジン故障時の補助エンジン"],
            ["フールプルーフ", "誤操作を防止", "洗濯機の蓋が開いたら停止"]
          ]
        },
        {
          "type": "example",
          "title": "例題：冗長化方式",
          "content": "2台のコンピュータが常に同じ処理を実行し、結果を照合する方式はどれか。\n\nア：デュアルシステム\nイ：デュプレックスシステム\nウ：ホットスタンバイ\nエ：クラスタリング",
          "solution": "答え：ア\n\n解説：デュアルシステムは、2台のコンピュータが同時に同じ処理を実行し、結果を照合することで高い信頼性を実現します。一方が故障しても即座に処理を継続できます。"
        }
      ]
    },
    {
      "id": 5,
      "title": "障害対策と復旧",
      "sections": [
        {
          "type": "text",
          "content": "システムの信頼性を維持するには、障害を予防し、発生時に迅速に復旧できる体制を整えることが重要です。"
        },
        {
          "type": "table",
          "headers": ["対策段階", "内容", "具体例"],
          "rows": [
            ["予防", "障害を未然に防ぐ", "定期点検、品質管理、監視"],
            ["検知", "障害を早期発見", "監視ツール、アラート"],
            ["回復", "障害から復旧", "切替、再起動、修理"],
            ["再発防止", "同じ障害を防ぐ", "原因分析、改善"]
          ]
        },
        {
          "type": "highlight",
          "icon": "💡",
          "title": "バックアップとリストア",
          "content": "データの損失に備えて定期的にバックアップを取り、障害時にリストア（復元）できるようにすることが基本です。"
        },
        {
          "type": "text",
          "content": "復旧に関する重要な概念を理解しましょう。"
        },
        {
          "type": "list",
          "items": [
            "RTO（Recovery Time Objective）：目標復旧時間",
            "RPO（Recovery Point Objective）：目標復旧時点、許容データ損失量",
            "バックアップサイト：本番環境が使えない時の代替環境",
            "ホットサイト：常に稼働している代替環境（即座に切替可能）",
            "コールドサイト：設備のみの代替環境（セットアップに時間）"
          ]
        },
        {
          "type": "highlight",
          "icon": "⚡",
          "title": "RAID（Redundant Arrays of Inexpensive Disks）",
          "content": "複数のハードディスクを組み合わせて冗長性や性能を向上させる技術です。RAID 1（ミラーリング）やRAID 5（パリティ分散）などがあります。"
        },
        {
          "type": "table",
          "headers": ["RAID", "構成", "特徴", "用途"],
          "rows": [
            ["RAID 0", "ストライピング", "高速、冗長性なし", "一時作業領域"],
            ["RAID 1", "ミラーリング", "冗長性あり、容量1/2", "重要データ"],
            ["RAID 5", "パリティ分散", "冗長性あり、容量効率良", "サーバ用途"],
            ["RAID 6", "二重パリティ", "2台故障まで耐える", "大規模ストレージ"]
          ]
        },
        {
          "type": "example",
          "title": "例題：RTO/RPO",
          "content": "システム障害から1時間以内に復旧し、過去30分以内のデータを復元する必要がある。この場合のRTOとRPOはどれか。\n\nア：RTO=1時間、RPO=30分\nイ：RTO=30分、RPO=1時間\nウ：RTO=1時間、RPO=1時間\nエ：RTO=30分、RPO=30分",
          "solution": "答え：ア\n\n解説：RTO（Recovery Time Objective）は目標復旧時間で1時間、RPO（Recovery Point Objective）は許容データ損失量で30分です。"
        },
        {
          "type": "highlight",
          "icon": "📌",
          "title": "試験対策のまとめ",
          "content": "RASIS（信頼性・可用性・保守性・保全性・安全性）、MTBF/MTTR、稼働率の計算（直列・並列）、冗長化方式（デュアル・デュプレックス）、障害対策を理解しましょう。"
        }
      ]
    }
  ]
}
