{
  "topicId": "strat-1-1-1",
  "title": "情報システム戦略",
  "pages": [
    {
      "pageNumber": 1,
      "title": "情報システム戦略の立案",
      "content": "## 情報システム戦略とは\n\n情報システム戦略は、企業の経営戦略を実現するために、情報システムをどのように構築・活用していくかを定めた計画です。経営戦略と整合性を保ちながら、IT投資の最適化と業務効率化を目指します。\n\n## 情報システム戦略の立案プロセス\n\n### 1. 現状分析\n- **業務分析**: 現在の業務プロセスと課題を明確化\n- **システム分析**: 既存システムの問題点と改善点を抽出\n- **外部環境分析**: 市場動向や競合他社のIT活用状況を調査\n\n### 2. 目標設定\n- **経営戦略との整合**: 経営目標達成に必要なIT要件を定義\n- **KPI設定**: システム導入効果を測定する指標を設定\n- **優先順位付け**: 投資対効果を考慮した実施順序を決定\n\n### 3. 実行計画策定\n- **ロードマップ作成**: 短期・中期・長期の実施計画を策定\n- **予算計画**: 必要な投資額と費用対効果を算出\n- **リスク管理**: 想定されるリスクと対策を明確化\n\n## 重要なポイント\n\n情報システム戦略は、単なる技術導入計画ではありません。**経営戦略の実現手段**として位置づけ、ビジネス価値の創出を最優先に考えることが重要です。",
      "keyPoints": [
        "情報システム戦略は経営戦略を実現するIT計画",
        "現状分析→目標設定→実行計画の3段階で立案",
        "KPI設定による効果測定が重要",
        "経営戦略との整合性を常に保つ"
      ]
    },
    {
      "pageNumber": 2,
      "title": "EA（エンタープライズアーキテクチャ）",
      "content": "## EAとは\n\nエンタープライズアーキテクチャ（EA）は、組織全体の業務とシステムを統一的な設計思想で整理し、最適化するためのフレームワークです。組織のあるべき姿（To-Be）と現状（As-Is）を可視化し、効率的な変革を実現します。\n\n## EA4層アーキテクチャ\n\nEAは4つの階層で構成されます：\n\n### 1. ビジネスアーキテクチャ（BA）\n- **定義**: 組織の業務プロセスと組織構造を定義\n- **具体例**: 受注プロセス、顧客管理業務、組織図\n- **目的**: 業務の標準化と効率化\n\n### 2. データアーキテクチャ（DA）\n- **定義**: 業務で使用するデータの構造と関連性を定義\n- **具体例**: 顧客マスタ、商品データベース、データフロー図\n- **目的**: データの一元管理と整合性確保\n\n### 3. アプリケーションアーキテクチャ（AA）\n- **定義**: 業務を支援するアプリケーションの配置と連携を定義\n- **具体例**: ERP、CRM、SCMシステムの配置図\n- **目的**: システムの重複排除と連携強化\n\n### 4. テクノロジーアーキテクチャ（TA）\n- **定義**: システムを実現する技術基盤を定義\n- **具体例**: サーバ構成、ネットワーク、セキュリティ基盤\n- **目的**: 技術の標準化とコスト削減\n\n## EAのメリット\n\n- **全体最適化**: 部分最適でなく組織全体での最適化を実現\n- **重複排除**: 類似システムの統廃合によるコスト削減\n- **変化への対応**: 標準化により柔軟な変更が可能\n- **投資判断**: To-Beモデルに基づく優先順位付けが可能",
      "keyPoints": [
        "EAは組織全体の業務とシステムを統一的に設計",
        "BA（業務）、DA（データ）、AA（アプリ）、TA（技術）の4層構造",
        "As-Is（現状）とTo-Be（あるべき姿）のギャップ分析",
        "全体最適化と重複排除がメリット"
      ]
    },
    {
      "pageNumber": 3,
      "title": "SOA（サービス指向アーキテクチャ）",
      "content": "## SOAとは\n\nサービス指向アーキテクチャ（SOA: Service-Oriented Architecture）は、業務機能を独立した「サービス」として構築し、それらを組み合わせてシステムを構成する設計手法です。柔軟性と再利用性を高めることができます。\n\n## SOAの基本概念\n\n### サービスの特徴\n\n1. **疎結合**: サービス間の依存関係を最小化\n2. **独立性**: 各サービスが独立して動作可能\n3. **再利用性**: 複数のシステムから同じサービスを利用\n4. **標準インターフェース**: XMLやRESTなど標準プロトコルで通信\n\n### 具体例\n\n**従来の一体型システム**:\n```\n[受注システム]\n  ├─ 顧客検索\n  ├─ 在庫確認\n  └─ 請求処理\n```\n\n**SOAアーキテクチャ**:\n```\n[顧客サービス] ←┐\n[在庫サービス] ←┼─ [受注アプリ]\n[請求サービス] ←┼─ [営業アプリ]\n                 └─ [Webサイト]\n```\n\n各サービスは独立して開発・保守でき、複数のアプリケーションから呼び出せます。\n\n## SOAのメリット\n\n### 1. 柔軟性の向上\n- サービスの組み合わせ変更が容易\n- 新規業務への迅速な対応が可能\n\n### 2. 再利用性の向上\n- 同じサービスを複数システムで共有\n- 開発コストと期間の削減\n\n### 3. 保守性の向上\n- サービス単位での修正が可能\n- 影響範囲を局所化できる\n\n## マイクロサービスとの関係\n\nマイクロサービスアーキテクチャは、SOAの概念をさらに発展させたもので、より小さく独立したサービスとして構築します。各サービスが独自のデータベースを持ち、完全に自律的に動作する点が特徴です。",
      "keyPoints": [
        "SOAは業務機能を独立したサービスとして構築",
        "疎結合・独立性・再利用性が特徴",
        "サービスを組み合わせてシステムを構成",
        "柔軟性と保守性が向上"
      ]
    },
    {
      "pageNumber": 4,
      "title": "クラウドコンピューティング（SaaS、PaaS、IaaS）",
      "content": "## クラウドコンピューティングとは\n\nクラウドコンピューティングは、インターネット経由でコンピュータ資源（サーバ、ストレージ、アプリケーション等）を利用するサービス形態です。従量課金制で必要な時に必要なだけ利用できるのが特徴です。\n\n## クラウドサービスの3分類\n\n### 1. SaaS（Software as a Service）\n\n**定義**: アプリケーションソフトウェアをサービスとして提供\n\n**特徴**:\n- ブラウザから即座に利用可能\n- インストール不要、自動アップデート\n- 複数デバイスからアクセス可能\n\n**具体例**:\n- **Gmail**: メールサービス\n- **Salesforce**: 顧客管理（CRM）\n- **Microsoft 365**: オフィスソフト\n- **Slack**: ビジネスチャット\n\n**メリット**: 初期投資不要、運用保守が不要、迅速な導入\n\n### 2. PaaS（Platform as a Service）\n\n**定義**: アプリケーション開発・実行環境をサービスとして提供\n\n**特徴**:\n- OSやミドルウェアはプロバイダが管理\n- 開発者はアプリケーション開発に集中\n- スケーリングが自動化\n\n**具体例**:\n- **Google App Engine**: Webアプリ実行環境\n- **Heroku**: アプリケーションホスティング\n- **AWS Elastic Beanstalk**: アプリケーション実行環境\n\n**メリット**: インフラ管理不要、開発に集中、自動スケーリング\n\n### 3. IaaS（Infrastructure as a Service）\n\n**定義**: サーバやネットワークなどのITインフラをサービスとして提供\n\n**特徴**:\n- 仮想サーバを自由に構築\n- OSから自分で設定可能\n- 柔軟なカスタマイズが可能\n\n**具体例**:\n- **Amazon EC2**: 仮想サーバ\n- **Microsoft Azure VM**: 仮想マシン\n- **Google Compute Engine**: コンピューティングインフラ\n\n**メリット**: 柔軟な構成、物理サーバ不要、スケーラビリティ\n\n## サービス分類の比較\n\n| 項目 | SaaS | PaaS | IaaS |\n|------|------|------|------|\n| 提供範囲 | アプリケーション | 開発・実行環境 | インフラ |\n| カスタマイズ性 | 低 | 中 | 高 |\n| 管理負担 | 最小 | 中程度 | 大きい |\n| 導入スピード | 最速 | 速い | やや時間要 |\n| 用途 | 業務利用 | アプリ開発 | システム基盤 |",
      "keyPoints": [
        "SaaS: アプリケーションをそのまま利用（Gmail、Salesforce）",
        "PaaS: 開発・実行環境を提供（Heroku、App Engine）",
        "IaaS: サーバ・ネットワーク等のインフラを提供（EC2、Azure VM）",
        "上位サービスほど管理負担が小さく、下位ほど柔軟性が高い"
      ]
    },
    {
      "pageNumber": 5,
      "title": "オンプレミスとクラウド",
      "content": "## オンプレミスとは\n\nオンプレミス（On-premises）は、自社内にサーバやネットワーク機器を設置し、システムを構築・運用する従来型の形態です。「自社所有型」とも呼ばれます。\n\n## オンプレミスとクラウドの比較\n\n### 初期コスト\n\n**オンプレミス**:\n- ハードウェア購入費用が必要（数百万円〜）\n- データセンター設備費用\n- 高額な初期投資が必要\n\n**クラウド**:\n- 初期費用がほぼゼロ\n- 従量課金制で開始可能\n- 少額から始められる\n\n### 運用コスト\n\n**オンプレミス**:\n- 保守・運用の人件費が継続的に発生\n- 電気代、冷却費用\n- 定期的なハードウェア更新が必要\n\n**クラウド**:\n- 月額利用料のみ\n- 保守作業はプロバイダが実施\n- 使用量に応じた柔軟な課金\n\n### セキュリティとカスタマイズ性\n\n**オンプレミス**:\n- **メリット**: 完全な管理権限、独自のセキュリティ対策が可能\n- **デメリット**: セキュリティ対策も自社責任\n\n**クラウド**:\n- **メリット**: プロバイダの高度なセキュリティ対策を利用\n- **デメリット**: カスタマイズに制約がある場合も\n\n### 拡張性（スケーラビリティ）\n\n**オンプレミス**:\n- 拡張に時間がかかる（機器調達に数週間〜数ヶ月）\n- 過剰投資のリスク（ピーク時に合わせた設備）\n\n**クラウド**:\n- 即座にスケールアップ・ダウン可能\n- 需要に応じた柔軟な対応\n- 無駄なコストを削減\n\n## 選択基準\n\n### オンプレミスが適しているケース\n\n1. **高度なセキュリティ要件**: 金融機関、医療機関など\n2. **既存システムとの統合**: レガシーシステムとの連携が必須\n3. **特殊なカスタマイズ**: 独自の業務要件が多い\n4. **長期的な運用**: 10年以上の利用でコスト優位性\n\n### クラウドが適しているケース\n\n1. **初期投資を抑えたい**: スタートアップ企業など\n2. **変動する負荷**: ECサイトのセール時など\n3. **迅速な導入**: 数週間で稼働開始\n4. **グローバル展開**: 世界中からのアクセスに対応\n\n## ハイブリッドクラウド\n\n重要なデータはオンプレミスで管理し、変動する業務負荷はクラウドで処理する**ハイブリッド構成**も増えています。両方のメリットを活かした柔軟な選択が可能です。\n\n### 具体例\n- **基幹システム**: オンプレミス（高セキュリティ）\n- **Webサイト**: クラウド（スケーラビリティ）\n- **開発環境**: クラウド（コスト削減）",
      "keyPoints": [
        "オンプレミスは自社内設置、クラウドはネット経由利用",
        "クラウドは初期費用ゼロ、オンプレミスは高額投資必要",
        "クラウドは即座に拡張可能、オンプレミスは拡張に時間要",
        "セキュリティ要件や業務特性で選択、ハイブリッド構成も可能"
      ]
    }
  ]
}
