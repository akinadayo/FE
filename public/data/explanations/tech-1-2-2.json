{
  "topicId": "tech-1-2-2",
  "title": "誤差",
  "pages": [
    {
      "id": 1,
      "title": "誤差とは",
      "sections": [
        {
          "type": "text",
          "content": "コンピュータで数値計算を行う際、様々な原因で誤差が発生します。誤差を理解し、適切に対処することは、正確なプログラムを作成する上で重要です。"
        },
        {
          "type": "highlight",
          "icon": "📝",
          "title": "誤差の定義",
          "content": "誤差とは、真の値と計算結果の差のことです。コンピュータの有限の桁数による制限や、計算方法の特性により発生します。"
        },
        {
          "type": "text",
          "content": "基本情報技術者試験で出題される主な誤差は以下の5種類です："
        },
        {
          "type": "list",
          "items": [
            "桁あふれ誤差（オーバーフロー）",
            "情報落ち",
            "打切り誤差",
            "桁落ち",
            "丸め誤差"
          ]
        },
        {
          "type": "highlight",
          "icon": "💡",
          "title": "誤差の分類",
          "content": "誤差は大きく2つに分類できます：\n\n1. 表現上の誤差：丸め誤差、桁あふれ誤差\n2. 演算上の誤差：情報落ち、桁落ち、打切り誤差"
        }
      ]
    },
    {
      "id": 2,
      "title": "桁あふれ誤差（オーバーフロー）",
      "sections": [
        {
          "type": "text",
          "content": "桁あふれ誤差は、計算結果がコンピュータで表現できる範囲を超えてしまうときに発生します。"
        },
        {
          "type": "highlight",
          "icon": "📝",
          "title": "桁あふれ誤差（オーバーフロー）",
          "content": "計算結果が、コンピュータで表現可能な最大値を超えた場合に発生する誤差です。最も深刻な誤差で、プログラムの異常終了や予期せぬ結果を引き起こす可能性があります。"
        },
        {
          "type": "example",
          "title": "整数のオーバーフロー",
          "content": "8ビットの符号なし整数の場合、表現範囲は0～255\n\n  200\n+ 100\n-----\n  300 → 8ビットでは表現不可能\n\n実際の結果：44（300 - 256 = 44）\n※ 桁があふれて誤った値になる"
        },
        {
          "type": "example",
          "title": "浮動小数点数のオーバーフロー",
          "content": "10³⁰ × 10³⁰ = 10⁶⁰\n\nもし指数部の最大値が10³⁸の場合、\n10⁶⁰は表現できず、オーバーフローが発生します。"
        },
        {
          "type": "highlight",
          "icon": "⚠️",
          "title": "対策",
          "content": "・演算前に値の範囲をチェックする\n・より大きな型（64ビット整数など）を使用する\n・アンダーフロー（表現可能な最小値以下）にも注意"
        },
        {
          "type": "table",
          "title": "オーバーフロー vs アンダーフロー",
          "headers": ["種類", "発生条件", "例"],
          "rows": [
            ["オーバーフロー", "最大値を超える", "10³⁰ × 10³⁰"],
            ["アンダーフロー", "最小値を下回る", "10⁻³⁰ × 10⁻³⁰"]
          ]
        }
      ]
    },
    {
      "id": 3,
      "title": "情報落ちと打切り誤差",
      "sections": [
        {
          "type": "text",
          "content": "情報落ちと打切り誤差は、どちらも有効桁数の制限により発生する誤差です。"
        },
        {
          "type": "highlight",
          "icon": "📝",
          "title": "情報落ち",
          "content": "絶対値が大きく異なる2つの数を加算・減算したとき、小さい方の数の情報が失われる現象です。"
        },
        {
          "type": "example",
          "title": "情報落ちの例",
          "content": "有効桁数が5桁の場合：\n\n  1.2345 × 10⁵  (123450)\n+ 1.2345 × 10⁰  (1.2345)\n-------------------\n  1.2345 × 10⁵  (123451.2345)\n\n→ 結果を5桁で表すと 1.2345 × 10⁵\n\n小さい方の数（1.2345）の情報が完全に失われた！"
        },
        {
          "type": "highlight",
          "icon": "📝",
          "title": "打切り誤差",
          "content": "無限に続く計算を途中で打ち切ることで生じる誤差です。特に、無限級数や繰り返し計算で発生します。"
        },
        {
          "type": "example",
          "title": "打切り誤差の例",
          "content": "円周率πの計算：\n\nπ = 4 × (1 - 1/3 + 1/5 - 1/7 + 1/9 - ...)\n\n10項で打ち切ると：\nπ ≈ 3.04...\n\n100項で打ち切ると：\nπ ≈ 3.13...\n\n真の値：π = 3.14159...\n\n→ 打ち切った部分が誤差になる"
        },
        {
          "type": "highlight",
          "icon": "💡",
          "title": "対策",
          "content": "情報落ちの対策：\n・絶対値の近い数同士で演算する\n・小さい数から順に加算する\n\n打切り誤差の対策：\n・十分な回数まで計算を続ける\n・誤差の評価式を使って精度を確認する"
        }
      ]
    },
    {
      "id": 4,
      "title": "桁落ち",
      "sections": [
        {
          "type": "text",
          "content": "桁落ちは、値が非常に近い2つの数を引き算したときに、有効桁数が減少する現象です。最も注意が必要な誤差の1つです。"
        },
        {
          "type": "highlight",
          "icon": "📝",
          "title": "桁落ち",
          "content": "ほぼ等しい2つの数の減算で、上位の有効桁が相殺され、有効桁数が減少する現象です。残った下位桁は誤差を含んでいることが多く、精度が大幅に低下します。"
        },
        {
          "type": "example",
          "title": "桁落ちの例",
          "content": "有効桁数が5桁の場合：\n\n  3.1416  (π)\n- 3.1415  (22/7の近似値)\n--------\n  0.0001\n\n元は5桁の精度だったのに、\n結果は1桁の精度しかない！\n\nさらに、下位桁に丸め誤差があると、\n結果は全く信頼できない値になる可能性がある。"
        },
        {
          "type": "example",
          "title": "桁落ちの実例（二次方程式）",
          "content": "x² - 10000x + 1 = 0 の解の公式：\n\nx = (10000 ± √(10000² - 4)) / 2\n  = (10000 ± √99999996) / 2\n  = (10000 ± 9999.9998) / 2\n\n小さい方の解：\nx = (10000 - 9999.9998) / 2 = 0.0001\n\n→ 10000と9999.9998の引き算で桁落ちが発生\n→ 精度が大幅に低下"
        },
        {
          "type": "highlight",
          "icon": "⚠️",
          "title": "桁落ちの特徴",
          "content": "・情報落ちとは異なり、同程度の大きさの数の減算で発生\n・有効桁数が激減する\n・残った桁は誤差を含むため、結果が信頼できない\n・プログラムのアルゴリズムを変更して回避する必要がある"
        },
        {
          "type": "highlight",
          "icon": "💡",
          "title": "対策",
          "content": "・式を変形して減算を避ける\n・分子の有理化などの数学的手法を使う\n・より精度の高い型（倍精度など）を使用する\n・別の計算方法を検討する"
        }
      ]
    },
    {
      "id": 5,
      "title": "丸め誤差",
      "sections": [
        {
          "type": "text",
          "content": "丸め誤差は、数値を有限桁で表現するときに、末尾を切り捨てたり四捨五入したりすることで生じる誤差です。"
        },
        {
          "type": "highlight",
          "icon": "📝",
          "title": "丸め誤差",
          "content": "無限の桁数を持つ数を、有限の桁数で表現する際に発生する誤差です。浮動小数点数で最も基本的な誤差で、避けることはできません。"
        },
        {
          "type": "example",
          "title": "丸め誤差の例（10進数）",
          "content": "有効桁数が3桁の場合：\n\n真の値：   1.234567\n丸めた値： 1.23  （切り捨て）\n      または 1.24  （四捨五入）\n\n誤差： 0.004567 または -0.005433"
        },
        {
          "type": "example",
          "title": "丸め誤差の例（2進数）",
          "content": "0.1₍₁₀₎ を2進数で表現：\n\n0.1₍₁₀₎ = 0.0001100110011...₍₂₎（無限循環）\n\n浮動小数点数では有限桁で切り捨てるため、\n正確な0.1を表現できず、丸め誤差が発生する。\n\nこのため：\n0.1 + 0.2 ≠ 0.3 となることがある"
        },
        {
          "type": "highlight",
          "icon": "💡",
          "title": "丸め方式",
          "content": "主な丸め方式：\n\n・切り捨て：小数点以下を単純に切る\n・切り上げ：小数点以下があれば1繰り上げる\n・四捨五入：5以上なら切り上げ、4以下なら切り捨て\n・偶数丸め（銀行丸め）：5の場合、偶数になる方に丸める"
        },
        {
          "type": "table",
          "title": "誤差のまとめ",
          "headers": ["誤差の種類", "発生原因", "影響度"],
          "rows": [
            ["桁あふれ誤差", "表現範囲超過", "非常に大"],
            ["情報落ち", "大小の数の加減算", "中"],
            ["桁落ち", "近い値の減算", "大"],
            ["打切り誤差", "計算の途中終了", "中"],
            ["丸め誤差", "有限桁での表現", "小"]
          ]
        },
        {
          "type": "highlight",
          "icon": "✅",
          "title": "試験対策のポイント",
          "content": "1. 各誤差の定義と発生原因を理解する\n2. 桁落ちと情報落ちの違いを明確にする\n3. 桁あふれ誤差が最も深刻であることを理解する\n4. 誤差の対策方法を知る\n5. 具体例で各誤差を見分けられるようにする"
        },
        {
          "type": "highlight",
          "icon": "📝",
          "title": "覚え方",
          "content": "【ケ・ジ・ケ・ウ・マ】で覚えよう！\n\nケ：桁あふれ（オーバーフロー）\nジ：情報落ち\nケ：桁落ち\nウ：打切り誤差\nマ：丸め誤差"
        }
      ]
    }
  ]
}
