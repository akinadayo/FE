{
  "topicId": "tech-1-4-2",
  "title": "誤り制御",
  "flashcards": [
    {
      "id": "tech-1-4-2-001",
      "front": "パリティチェックとは何ですか？",
      "back": "データの誤りを検出する方式の一つで、データに1ビットのパリティビットを付加する方法です。偶数パリティでは1のビット数が偶数になるように、奇数パリティでは奇数になるようにパリティビットを設定します。1ビットの誤りを検出できますが、偶数ビットの誤りは検出できません。",
      "importance": "high"
    },
    {
      "id": "tech-1-4-2-002",
      "front": "水平垂直パリティチェックの仕組みを説明してください。",
      "back": "データをブロック単位で縦横に配置し、各行（水平方向）と各列（垂直方向）にパリティビットを付加する方式です。水平パリティと垂直パリティを組み合わせることで、1ビット誤りの検出だけでなく、誤りの位置も特定できるため、誤り訂正も可能になります。",
      "importance": "high"
    },
    {
      "id": "tech-1-4-2-003",
      "front": "CRC（巡回冗長検査）とは何ですか？",
      "back": "Cyclic Redundancy Checkの略で、データを生成多項式で割った余りをチェックサムとして付加する誤り検出方式です。パリティチェックよりも検出能力が高く、複数ビットの誤りも検出できます。イーサネットなどのネットワーク通信で広く使用されています。",
      "importance": "high"
    },
    {
      "id": "tech-1-4-2-004",
      "front": "ハミング符号の特徴は何ですか？",
      "back": "誤り訂正符号の一種で、データビットに複数の検査ビットを付加することで、1ビット誤りの検出と訂正が可能な方式です。検査ビットの位置は2の累乗の位置（1, 2, 4, 8...）に配置され、各検査ビットは特定のビット位置を検査します。誤りの位置を特定して自動的に訂正できます。",
      "importance": "high"
    },
    {
      "id": "tech-1-4-2-005",
      "front": "偶数パリティと奇数パリティの違いを説明してください。",
      "back": "偶数パリティは、データビットとパリティビットを合わせて1のビット数が偶数になるように設定します。奇数パリティは1のビット数が奇数になるように設定します。例：データが「1011」の場合、偶数パリティでは「0」、奇数パリティでは「1」を付加します。どちらを使用するかは通信規約で決定されます。",
      "importance": "medium"
    },
    {
      "id": "tech-1-4-2-006",
      "front": "パリティチェックで検出できない誤りは何ですか？",
      "back": "偶数個のビット誤りは検出できません。例えば、2ビット、4ビットなど偶数個のビットが同時に誤ると、パリティビットの値は変化しないため誤りを検出できません。また、パリティチェックは誤り検出のみで、誤り訂正はできません。",
      "importance": "medium"
    },
    {
      "id": "tech-1-4-2-007",
      "front": "CRCの生成多項式とは何ですか？",
      "back": "CRCで誤り検出に使用する除数となる多項式です。送信側はデータを生成多項式で割った余りをCRC値として付加し、受信側も同じ生成多項式で割って余りを比較します。余りが一致すれば誤りなし、不一致なら誤りありと判断します。代表的な生成多項式にCRC-16、CRC-32などがあります。",
      "importance": "medium"
    },
    {
      "id": "tech-1-4-2-008",
      "front": "ハミング符号で7ビットのデータに必要な検査ビット数は？",
      "back": "4ビットの検査ビットが必要です。ハミング符号では、データビット数をmとすると、2^r ≥ m + r + 1 を満たす最小のrが検査ビット数になります。7ビットの場合、2^4 = 16 ≥ 7 + 4 + 1 = 12 となり、r = 4が最小値です。合計11ビット（データ7ビット + 検査4ビット）になります。",
      "importance": "high"
    },
    {
      "id": "tech-1-4-2-009",
      "front": "誤り検出と誤り訂正の違いを説明してください。",
      "back": "誤り検出は、データに誤りがあるかどうかを判定する機能です（パリティチェック、CRCなど）。誤り訂正は、誤りを検出するだけでなく、誤りの位置を特定して正しいデータに修正する機能です（ハミング符号など）。誤り訂正の方がより多くの冗長ビットが必要ですが、再送信が不要になります。",
      "importance": "high"
    },
    {
      "id": "tech-1-4-2-010",
      "front": "CRCがパリティチェックより優れている点は？",
      "back": "1) 複数ビットの誤りを高確率で検出できる、2) バースト誤り（連続したビットの誤り）にも強い、3) 検出能力が高く信頼性が向上する、などの利点があります。ただし、計算が複雑でハードウェアまたはソフトウェアの実装が必要です。ネットワーク通信やストレージで広く使用されています。",
      "importance": "medium"
    },
    {
      "id": "tech-1-4-2-011",
      "front": "ハミング距離とは何ですか？",
      "back": "2つの符号語で異なるビット位置の数を表します。例えば、「1011」と「1001」のハミング距離は1（3ビット目のみ異なる）です。誤り訂正符号の能力はハミング距離で決まり、ハミング距離dの符号は、d-1ビットまでの誤りを検出し、(d-1)/2ビットまでの誤りを訂正できます。",
      "importance": "medium"
    },
    {
      "id": "tech-1-4-2-012",
      "front": "チェックサムとは何ですか？",
      "back": "データの整合性を検証するために計算される値で、データブロックから特定のアルゴリズムで計算されます。送信側がチェックサムを計算してデータに付加し、受信側も同じ計算を行って比較します。一致すればデータは正常、不一致なら誤りがあると判断します。CRCもチェックサムの一種です。",
      "importance": "low"
    },
    {
      "id": "tech-1-4-2-013",
      "front": "ARQ（自動再送要求）とは何ですか？",
      "back": "Automatic Repeat reQuestの略で、誤り制御方式の一つです。受信側が誤りを検出した場合、送信側に再送を要求する方式です。パリティチェックやCRCなどの誤り検出と組み合わせて使用され、誤り訂正符号と異なり冗長ビットは少なくて済みますが、再送によって伝送効率が低下する可能性があります。",
      "importance": "low"
    },
    {
      "id": "tech-1-4-2-014",
      "front": "FEC（前方誤り訂正）とは何ですか？",
      "back": "Forward Error Correctionの略で、受信側が誤りを検出したときに再送要求せずに自分で誤りを訂正する方式です。ハミング符号などの誤り訂正符号を使用します。リアルタイム通信や一方向通信（放送など）で有効ですが、冗長ビットが多く必要になります。ARQとは対照的なアプローチです。",
      "importance": "low"
    }
  ]
}