{
  "topicId": "strat-1-2-2",
  "title": "要件定義",
  "flashcards": [
    {
      "id": "strat-1-2-2-fc-001",
      "question": "要件定義の主な目的を3つ挙げてください。",
      "answer": "1. 認識の統一：発注者と開発者の間でシステムのイメージを共有\n2. 開発範囲の明確化：何をシステム化し何を人手で行うかを明確化\n3. 品質基準の設定：システムが満たすべき性能や使いやすさの基準を設定",
      "importance": 5
    },
    {
      "id": "strat-1-2-2-fc-002",
      "question": "業務要件とは何ですか。機能要件との違いも説明してください。",
      "answer": "業務要件：ユーザーの業務上の課題や目標を定義したもので、「なぜそのシステムが必要なのか」を明確にする。\n\n機能要件：システムが「何をするか」を具体的に定義したもの。\n\n違い：業務要件は「Why」を、機能要件は「What」を定義する。業務要件が明確になって初めて、それを実現する機能要件を定義できる。",
      "importance": 5
    },
    {
      "id": "strat-1-2-2-fc-003",
      "question": "機能要件を記述する際の3つの要素は何ですか。",
      "answer": "1. 入力：どのようなデータを受け取るか（形式、制約条件など）\n2. 処理：入力データをどのように処理するか（ロジック、計算など）\n3. 出力：どのような結果を返すか（形式、表示方法など）\n\nこれら3要素を明確にすることで、実装可能な機能仕様になる。",
      "importance": 5
    },
    {
      "id": "strat-1-2-2-fc-004",
      "question": "MoSCoW法における4つの優先度区分を説明してください。",
      "answer": "Must have（必須）：システムに絶対必要な機能。これがないとシステムが成立しない。\n\nShould have（重要）：あるべき機能だが、なくても運用可能。\n\nCould have（あれば良い）：優先度は低いが価値がある機能。\n\nWon't have（対象外）：今回は実装しない機能。次期開発などで検討。",
      "importance": 4
    },
    {
      "id": "strat-1-2-2-fc-005",
      "question": "非機能要件とは何ですか。主な分類を5つ挙げてください。",
      "answer": "非機能要件：システムの品質特性を定義するもので、「どのように動くか」を規定する。\n\n主な分類：\n1. 性能・拡張性：応答速度、処理能力、将来の拡張性\n2. 可用性・信頼性：稼働率、障害復旧時間\n3. セキュリティ：暗号化、アクセス制御、脆弱性対策\n4. ユーザビリティ：使いやすさ、アクセシビリティ\n5. 運用・保守性：ログ、監視、バックアップ",
      "importance": 5
    },
    {
      "id": "strat-1-2-2-fc-006",
      "question": "性能要件を定義する際、「検索は高速に動作すること」という記述の問題点と改善例を示してください。",
      "answer": "問題点：「高速」という表現が曖昧で測定不可能。人によって解釈が異なる。\n\n改善例：「商品検索結果を1秒以内に表示すること。95%タイル値で2秒以内とする。」\n\nポイント：具体的な数値で表現し、測定可能にすることで、実装時の目標が明確になり、テスト時の合否判定も客観的に行える。",
      "importance": 5
    },
    {
      "id": "strat-1-2-2-fc-007",
      "question": "可用性99.9%とはどういう意味ですか。年間の停止時間も計算してください。",
      "answer": "可用性99.9%：システムが正常に稼働している時間の割合が99.9%であること。\n\n年間停止時間の計算：\n1年 = 365日 × 24時間 = 8,760時間\n停止時間 = 8,760 × (100% - 99.9%) = 8,760 × 0.1% = 8.76時間\n\nつまり、年間で約8時間46分までの停止が許容される。これを「スリーナイン」と呼ぶ。",
      "importance": 4
    },
    {
      "id": "strat-1-2-2-fc-008",
      "question": "RTOとRPOの違いを説明してください。",
      "answer": "RTO（Recovery Time Objective：目標復旧時間）：障害発生からシステムを復旧させるまでの目標時間。例：1時間以内に復旧。\n\nRPO（Recovery Point Objective：目標復旧時点）：どの時点の状態まで復旧させるかの目標。例：5分前の状態まで復旧。\n\n違い：RTOは「復旧にかかる時間」、RPOは「データ損失の許容範囲」を表す。",
      "importance": 4
    },
    {
      "id": "strat-1-2-2-fc-009",
      "question": "要件定義書に含まれる主な構成要素を5つ挙げてください。",
      "answer": "1. プロジェクト概要：背景、目的、期待効果\n2. 業務要件：現状課題、目標、業務フロー\n3. 機能要件：機能一覧、詳細仕様、画面遷移図\n4. 非機能要件：性能、可用性、セキュリティなど\n5. 制約事項・前提条件：予算、納期、技術制約、利用環境\n\nこれらを網羅することで、開発チーム全体の指針となる。",
      "importance": 4
    },
    {
      "id": "strat-1-2-2-fc-010",
      "question": "要件定義における合意形成の重要性と、合意の証跡として残すべきものを説明してください。",
      "answer": "重要性：要件定義での合意がないと、後工程で「言った・言わない」のトラブルが発生し、大幅な手戻りが発生する。早期の合意が後戻りを防ぐ。\n\n合意の証跡：\n1. 承認印または電子署名\n2. 合意議事録\n3. 変更管理プロセスの取り決め\n\nこれらを残すことで、責任の所在が明確になり、後の変更管理もスムーズになる。",
      "importance": 5
    },
    {
      "id": "strat-1-2-2-fc-011",
      "question": "要件変更管理プロセスの5つのステップを説明してください。",
      "answer": "1. 変更要求の提出：変更内容、理由、影響範囲を文書化\n2. 影響分析：コスト、納期、品質への影響を評価\n3. 承認判断：変更管理委員会（CCB）で可否を判断\n4. 要件定義書の更新：承認された変更を反映し版数を上げる\n5. 関係者への通知：変更内容を全員に周知\n\n適切な変更管理により、混乱を防ぎ品質を維持できる。",
      "importance": 4
    },
    {
      "id": "strat-1-2-2-fc-012",
      "question": "トレーサビリティマトリクスとは何ですか。その目的を説明してください。",
      "answer": "トレーサビリティマトリクス：要件から設計、実装、テストまでの紐付けを管理する表。各要件がどの設計書、ソースコード、テストケースに対応しているかを記録する。\n\n目的：\n1. 要件変更時の影響範囲を正確に把握できる\n2. すべての要件が実装・テストされているか確認できる\n3. 不要な機能の実装を防げる\n4. 監査やレビューで追跡可能性を証明できる",
      "importance": 4
    }
  ]
}
