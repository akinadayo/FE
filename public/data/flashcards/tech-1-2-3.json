{
  "topicId": "tech-1-2-3",
  "title": "グラフ理論",
  "flashcards": [
    {
      "id": "fc-tech-1-2-3-001",
      "front": "グラフとは何ですか？",
      "back": "頂点（ノード）と辺（エッジ）で構成される数学的構造です。\n\n構成要素:\n・頂点（Vertex/Node）: 点\n・辺（Edge）: 頂点を結ぶ線\n\n用途: ネットワーク、経路、関係性の表現",
      "importance": 5
    },
    {
      "id": "fc-tech-1-2-3-002",
      "front": "無向グラフと有向グラフの違いは？",
      "back": "無向グラフ: 辺に方向がない（双方向）\n有向グラフ: 辺に方向がある（一方向）\n\n例:\n無向: A―B（AとBは相互接続）\n有向: A→B（AからBへのみ）",
      "importance": 5
    },
    {
      "id": "fc-tech-1-2-3-003",
      "front": "重み付きグラフとは何ですか？",
      "back": "各辺にコスト（重み）が付いているグラフです。\n\n用途:\n・最短経路問題（距離が重み）\n・最小コスト問題（費用が重み）\n・ネットワーク最適化\n\n例: 都市間の距離を表す道路網",
      "importance": 4
    },
    {
      "id": "fc-tech-1-2-3-004",
      "front": "次数（degree）とは何ですか？",
      "back": "ある頂点に接続している辺の数です。\n\n無向グラフ:\n・次数 = 接続辺数\n\n有向グラフ:\n・入次数: 入ってくる辺の数\n・出次数: 出ていく辺の数",
      "importance": 4
    },
    {
      "id": "fc-tech-1-2-3-005",
      "front": "連結グラフとは何ですか？",
      "back": "すべての頂点が経路で結ばれているグラフです。\n\n判定:\n・任意の2頂点間に経路が存在\n・孤立した頂点がない\n\n非連結グラフは複数の連結成分に分かれています。",
      "importance": 4
    },
    {
      "id": "fc-tech-1-2-3-006",
      "front": "完全グラフとは何ですか？",
      "back": "すべての頂点が他のすべての頂点と直接接続されているグラフです。\n\nn頂点の完全グラフの辺数:\nn(n-1)/2\n\n例: 4頂点 → 6辺（4×3/2）",
      "importance": 3
    },
    {
      "id": "fc-tech-1-2-3-007",
      "front": "木（Tree）とは何ですか？",
      "back": "閉路を持たない連結グラフです。\n\n特徴:\n・n頂点の木は(n-1)本の辺を持つ\n・任意の2頂点間の経路が一意\n・階層構造を表現\n\n用途: ファイルシステム、組織図",
      "importance": 5
    },
    {
      "id": "fc-tech-1-2-3-008",
      "front": "根付き木（rooted tree）とは？",
      "back": "1つの頂点を根（root）として定めた木構造です。\n\n用語:\n・根: 最上位の頂点\n・親: 上位の頂点\n・子: 下位の頂点\n・葉: 子を持たない頂点\n\n例: 二分探索木、ディレクトリ構造",
      "importance": 4
    },
    {
      "id": "fc-tech-1-2-3-009",
      "front": "経路（path）とは何ですか？",
      "back": "頂点を辺でたどる順序です。同じ頂点を通らない経路を単純経路と呼びます。\n\n例:\nA→B→C→D（単純経路）\nA→B→C→B→D（非単純経路）\n\n経路の長さ = 経由する辺の数",
      "importance": 4
    },
    {
      "id": "fc-tech-1-2-3-010",
      "front": "閉路（サイクル）とは何ですか？",
      "back": "始点と終点が同じ経路です。\n\n例:\nA→B→C→A（3頂点の閉路）\n\n特徴:\n・同じ頂点を2回以上通る\n・木には閉路がない\n・有向グラフでは「循環」",
      "importance": 4
    },
    {
      "id": "fc-tech-1-2-3-011",
      "front": "最短経路問題とは？",
      "back": "2つの頂点間の最小コスト経路を求める問題です。\n\n代表的なアルゴリズム:\n・ダイクストラ法（単一始点）\n・ベルマン-フォード法（負辺対応）\n・ワーシャル-フロイド法（全点対）",
      "importance": 5
    },
    {
      "id": "fc-tech-1-2-3-012",
      "front": "隣接行列とは何ですか？",
      "back": "グラフの辺の接続関係を行列で表現したものです。\n\nn×nの行列（n=頂点数）\n要素[i][j]:\n・1: 頂点iとjが接続\n・0: 接続なし\n・重み: 重み付きグラフの場合",
      "importance": 4
    },
    {
      "id": "fc-tech-1-2-3-013",
      "front": "隣接リストとは何ですか？",
      "back": "各頂点に接続している頂点をリストで表現したものです。\n\n例:\n頂点A: [B, C]\n頂点B: [A, C, D]\n頂点C: [A, B]\n\n疎なグラフで空間効率が良い。",
      "importance": 3
    },
    {
      "id": "fc-tech-1-2-3-014",
      "front": "オイラー路とは何ですか？",
      "back": "すべての辺を1回ずつ通る経路です。\n\n存在条件（無向グラフ）:\n・次数が奇数の頂点が0個または2個\n\n応用:\n・一筆書き問題\n・経路最適化",
      "importance": 2
    }
  ]
}
