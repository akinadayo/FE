{
  "topicId": "tech-2-1-1",
  "title": "プロセッサ（CPU）",
  "flashcards": [
    {
      "id": "tech-2-1-1-001",
      "front": "コンピュータの5大装置とは何ですか？",
      "back": "制御装置、演算装置、主記憶装置、入力装置、出力装置の5つです。制御装置と演算装置を合わせてCPU（中央処理装置）と呼びます。制御装置はプログラムの命令を解釈して各装置を制御し、演算装置は算術演算や論理演算を実行します。主記憶装置はプログラムとデータを格納します。",
      "importance": "high"
    },
    {
      "id": "tech-2-1-1-002",
      "front": "ノイマン型コンピュータの特徴を説明してください。",
      "back": "プログラム内蔵方式を採用したコンピュータです。プログラムとデータを同じ主記憶装置に格納し、プログラムを順次読み出して実行します。特徴は、1) プログラムを記憶装置に格納、2) プログラムを逐次実行、3) 2進数で処理、4) 5大装置で構成、などです。現在のほとんどのコンピュータがこの方式を採用しています。",
      "importance": "high"
    },
    {
      "id": "tech-2-1-1-003",
      "front": "プログラムカウンタ（PC）の役割は何ですか？",
      "back": "次に実行する命令が格納されているメモリアドレスを保持するレジスタです。通常は命令実行後に自動的に次の命令のアドレスに更新されます（インクリメント）。分岐命令が実行されると、分岐先のアドレスがプログラムカウンタに設定されます。プログラムの実行順序を制御する重要なレジスタです。",
      "importance": "high"
    },
    {
      "id": "tech-2-1-1-004",
      "front": "命令実行の3つの手順を説明してください。",
      "back": "1) フェッチ：プログラムカウンタが示すアドレスから命令を読み出して命令レジスタに格納、2) デコード：命令レジスタの内容を解読して何をすべきか判断、3) 実行：デコード結果に基づいて演算や転送などの処理を実行。この3ステップを繰り返すことでプログラムが実行されます。",
      "importance": "high"
    },
    {
      "id": "tech-2-1-1-005",
      "front": "即値アドレス指定方式とは何ですか？",
      "back": "命令のオペランド部にデータそのものを直接指定する方式です。メモリアクセスが不要なため最も高速ですが、大きな値や変数は扱えません。例：「レジスタAに5を代入」という命令で、5が即値です。定数の設定やカウンタの初期化などに使用されます。",
      "importance": "medium"
    },
    {
      "id": "tech-2-1-1-006",
      "front": "間接アドレス指定方式の特徴は何ですか？",
      "back": "命令で指定されたアドレスに格納されている値を、実際のデータがあるアドレスとして使用する方式です。つまり2回のメモリアクセスが必要です。ポインタや配列の実装に使用され、柔軟なデータアクセスが可能ですが、処理速度は遅くなります。",
      "importance": "medium"
    },
    {
      "id": "tech-2-1-1-007",
      "front": "MIPSとは何を表す指標ですか？",
      "back": "Million Instructions Per Secondの略で、CPUが1秒間に実行できる命令数を百万単位で表す性能指標です。例えば100MIPSは1秒間に1億命令実行できることを意味します。ただし、命令の複雑さは考慮されないため、異なるアーキテクチャ間の比較には向きません。計算式は：MIPS = クロック周波数 ÷ CPI ÷ 10^6です。",
      "importance": "high"
    },
    {
      "id": "tech-2-1-1-008",
      "front": "パイプライン処理とは何ですか？",
      "back": "命令実行の各段階（フェッチ、デコード、実行など）を並列化して、複数の命令を同時に異なる段階で処理する技術です。流れ作業のように連続的に命令を処理することで、スループットが向上します。ただし、分岐命令やデータ依存関係によってパイプラインハザード（停止）が発生することがあります。",
      "importance": "high"
    },
    {
      "id": "tech-2-1-1-009",
      "front": "CPI（Cycles Per Instruction）とは何ですか？",
      "back": "1命令の実行に必要な平均クロックサイクル数を表す指標です。CPIが小さいほど効率的なCPUです。命令実行時間 = CPI × クロック周波数の逆数で計算されます。複雑な命令セットを持つCISCはCPIが大きく、単純な命令セットのRISCはCPIが小さい傾向があります。",
      "importance": "medium"
    },
    {
      "id": "tech-2-1-1-010",
      "front": "RISCとCISCの違いを説明してください。",
      "back": "RISC（縮小命令セットコンピュータ）は単純な命令のみで構成され、1命令1クロックを目指し、パイプライン処理に適しています。CISC（複雑命令セットコンピュータ）は複雑で多機能な命令を持ち、1命令で複雑な処理が可能ですが、実行に複数クロックかかります。現代のCPUは両方の利点を取り入れたハイブリッド設計が多いです。",
      "importance": "medium"
    },
    {
      "id": "tech-2-1-1-011",
      "front": "スーパースカラとは何ですか？",
      "back": "複数のパイプラインを並列に動作させて、1クロックサイクルで複数の命令を同時実行する技術です。パイプライン処理をさらに発展させたもので、より高い並列性を実現します。命令間の依存関係を動的に判断して実行順序を最適化する機能も持ちます。現代の高性能CPUで広く採用されています。",
      "importance": "medium"
    },
    {
      "id": "tech-2-1-1-012",
      "front": "インデックスアドレス指定方式とは何ですか？",
      "back": "命令で指定されたアドレスにインデックスレジスタの値を加算したアドレスを実効アドレスとする方式です。配列やテーブルのアクセスに適しており、インデックスレジスタを変更するだけで異なる要素にアクセスできます。ループ処理での配列操作などに頻繁に使用されます。",
      "importance": "low"
    },
    {
      "id": "tech-2-1-1-013",
      "front": "命令レジスタの役割は何ですか？",
      "back": "メモリから読み出された命令（機械語）を一時的に保持するレジスタです。フェッチフェーズで命令が格納され、デコードフェーズで命令の内容が解読されます。制御装置はこのレジスタの内容を基に、どの演算を実行するか、どのレジスタを使用するかなどを決定します。",
      "importance": "low"
    },
    {
      "id": "tech-2-1-1-014",
      "front": "クロック周波数とCPU性能の関係を説明してください。",
      "back": "クロック周波数が高いほど、単位時間あたりに実行できる処理が増えます。ただし、CPU性能はクロック周波数だけで決まるわけではありません。CPI（命令あたりのクロック数）、キャッシュのヒット率、パイプライン効率、コア数なども重要です。実行時間 = 命令数 × CPI × クロック周波数の逆数で表されます。",
      "importance": "low"
    }
  ]
}