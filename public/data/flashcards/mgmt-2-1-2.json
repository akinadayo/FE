{
  "topicId": "mgmt-2-1-2",
  "title": "サービスサポート",
  "flashcards": [
    {
      "id": "mgmt-2-1-2-fc-1",
      "front": "インシデントと問題の違いは？具体例は？",
      "back": "インシデントは「症状（現象）」、問題は「根本原因」です。\n\n【具体例】\n症状: プリンタで印刷できない（インシデント）\n根本原因: プリンタドライバの不具合（問題）\n\n【対応の違い】\nインシデント管理:\n- 目的: 迅速なサービス復旧\n- 対応: プリンタを再起動（ワークアラウンド）\n- 対応時間: 5分\n\n問題管理:\n- 目的: 再発防止\n- 対応: プリンタドライバの不具合を調査し、ドライバをアップデート（恒久的な解決策）\n- 対応時間: 1週間\n\nインシデント管理で記録されたインシデントを分析し、問題管理で根本原因を解決することで、インシデントの再発を防止します。",
      "importance": 5
    },
    {
      "id": "mgmt-2-1-2-fc-2",
      "front": "エスカレーションの2つの種類は？各々の具体例は？",
      "back": "①機能的エスカレーション（Functional Escalation）:\n専門知識を持つチームへのエスカレーション。\n\n具体例: サービスデスクで解決できないネットワークの技術的な問題 → ネットワークチームへエスカレーション、データベースの問題 → データベースチームへエスカレーション\n\n②階層的エスカレーション（Hierarchical Escalation）:\n上位管理者へのエスカレーション。\n\n具体例: SLA（サービスレベル合意）違反の可能性がある重大インシデント → サービスデスク責任者 → IT部長へエスカレーション、ビジネスに大きな影響を与えるインシデント → 経営層へエスカレーション\n\n機能的エスカレーションは「専門性」、階層的エスカレーションは「意思決定権限」の観点でエスカレーションします。",
      "importance": 4
    },
    {
      "id": "mgmt-2-1-2-fc-3",
      "front": "既知のエラー（Known Error）とは？KEDBの役割は？",
      "back": "既知のエラー（Known Error）:\n根本原因が特定されたが、まだ恒久的な解決策が実施されていない問題。\n\n具体例: データベースサーバのメモリリークが原因と判明したが、修正版がまだリリースされていない状態。\n\nKEDB（Known Error Database、既知のエラーデータベース）:\n既知のエラーとワークアラウンド（一時的な回避策）を記録したデータベース。\n\n役割:\n①過去に発生した既知のエラーを検索\n②同じインシデントが発生したら、KEDBからワークアラウンドを検索し、すぐに適用 → インシデント対応時間を短縮\n③恒久的な解決策が実施されたら、KEDBから削除\n\nKEDBにより、同じインシデントに対して、毎回調査する必要がなくなり、インシデント対応が効率化されます。",
      "importance": 5
    },
    {
      "id": "mgmt-2-1-2-fc-4",
      "front": "変更の3つの種類は？各々の承認プロセスは？",
      "back": "①標準変更（Standard Change）:\n事前に承認された、リスクが低く、頻繁に発生する変更。\n承認プロセス: CABの承認不要（事前承認済み）\n具体例: パスワードリセット、定期メンテナンス、ソフトウェアの定期アップデート\n\n②通常変更（Normal Change）:\n一般的な変更。\n承認プロセス: CAB（変更諮問委員会）の承認が必要\n具体例: Webサーバのソフトウェアアップデート、ネットワーク構成の変更\n\n③緊急変更（Emergency Change）:\n緊急性の高い変更。\n承認プロセス: ECAB（緊急CAB）の承認が必要\n具体例: 重大な障害に対する緊急パッチの適用、セキュリティ脆弱性への緊急対応\n\n標準変更は事前承認により、迅速に実施できます。緊急変更は、ECABで迅速に審議・承認されます。",
      "importance": 5
    },
    {
      "id": "mgmt-2-1-2-fc-5",
      "front": "CAB（変更諮問委員会）の役割とメンバーは？",
      "back": "CAB（Change Advisory Board、変更諮問委員会）:\n変更要求（RFC）を審議し、承認するための委員会。\n\n役割:\n①変更要求のリスク評価（影響範囲、リスク、ビジネスへの影響）\n②変更の承認または却下\n③変更のスケジュール調整（他の変更との競合を避ける）\n④変更後のレビュー\n\nメンバー（例）:\n①変更管理者（議長）\n②IT部長\n③セキュリティ担当\n④運用担当\n⑤サービスオーナー（ビジネス側の代表）\n⑥必要に応じて、技術専門家（ネットワーク担当、データベース担当）\n\nCABは、定期的に開催され（週1回など）、変更要求を審議します。ECAB（緊急CAB）は、緊急時に臨時で開催されます。",
      "importance": 5
    },
    {
      "id": "mgmt-2-1-2-fc-6",
      "front": "ワークアラウンドとは？恒久的な解決策との違いは？",
      "back": "ワークアラウンド（Workaround）:\n根本原因を解決しない一時的な回避策。インシデント管理で使用し、サービスを迅速に復旧させる。\n\n具体例:\n①サーバAがダウン → サーバBに切り替え（サーバAのダウン原因は未解決）\n②プリンタで印刷できない → プリンタを再起動（プリンタドライバの不具合は未解決）\n③データベースサーバのメモリリーク → サーバを定期的に再起動（メモリリークは未解決）\n\n恒久的な解決策（Permanent Fix）:\n根本原因を解決する対策。問題管理で実施し、インシデントの再発を防止する。\n\n具体例:\n①サーバAのハードウェア故障を修理\n②プリンタドライバをアップデート\n③データベースのクエリを修正し、メモリリークを解消\n\nワークアラウンドは「速やかな復旧」、恒久的な解決策は「再発防止」を目的とします。",
      "importance": 4
    },
    {
      "id": "mgmt-2-1-2-fc-7",
      "front": "CMDB（構成管理データベース）の役割と活用例は？",
      "back": "CMDB（Configuration Management Database、構成管理データベース）:\n構成アイテム（CI: Configuration Item）の情報と関係を記録したデータベース。\n\n記録内容:\n①構成アイテム（CI）の属性: サーバ名、IPアドレス、OS、メモリ、ディスク、ソフトウェアバージョン\n②構成アイテム間の関係: WebサーバAはデータベースサーバBに接続\n③変更履歴: 2025年11月1日、Apache 2.4.50 → 2.4.51にアップデート\n\n活用例:\n①インシデント発生時の影響範囲の特定: データベースサーバBがダウン → CMDBで「WebサーバA、アプリケーションサーバCが影響を受ける」と確認\n②変更による影響の事前評価: ネットワーク機器Cを変更 → CMDBで「どのサーバが接続されているか」を確認\n③資産管理: ライセンス管理（ソフトウェアのライセンス数と使用状況を確認）\n\nCMDBの情報が不正確だと、影響範囲の分析を誤るリスクがあります。",
      "importance": 5
    },
    {
      "id": "mgmt-2-1-2-fc-8",
      "front": "リアクティブ問題管理とプロアクティブ問題管理の違いは？",
      "back": "①リアクティブ問題管理（Reactive Problem Management）:\nインシデント発生後に問題を調査する問題管理。\n\n流れ:\n①インシデントが発生（例: データベースサーバが3回ダウン）\n②インシデント管理チームが問題管理チームに調査を依頼\n③根本原因を調査・特定\n④恒久的な解決策を実施\n\n②プロアクティブ問題管理（Proactive Problem Management）:\nインシデントが発生する前に、潜在的な問題を予測し、対策を実施する問題管理。\n\n活動:\n①ログ分析、トレンド分析、サーバの性能監視\n②例: ディスク使用量が80%を超えたらアラートを出し、ディスクを増設（ディスク不足によるサーバダウンを予防）\n③例: メモリ使用量の増加傾向を検出 → メモリリークの可能性を調査\n\nプロアクティブ問題管理により、インシデントの発生を未然に防ぎ、サービスの安定性を向上させます。",
      "importance": 4
    },
    {
      "id": "mgmt-2-1-2-fc-9",
      "front": "リリース管理のフローは？重要なポイントは？",
      "back": "リリース管理のフロー:\n①リリース計画の作成: リリース内容、リリース予定日、構成アイテム（CI）を決定\n②リリースのビルドとパッケージング: アプリケーションコード、設定ファイルをまとめる\n③リリースのテスト: テスト環境でデプロイし、動作確認\n④変更管理プロセスとの連携: 変更要求（RFC）を提出し、CABで承認\n⑤リリースの展開（デプロイ）: 本番環境にデプロイ、動作確認\n⑥リリース後のレビュー: 結果をレビューし、CMDBを更新\n\n重要なポイント:\n①テスト環境で事前に検証（本番環境での問題を未然に防ぐ）\n②ロールバック計画を準備（問題が発生したら、すぐに元の状態に戻す）\n③リリース後、CMDBを更新（構成アイテムの情報を最新化）\n④リリースは、アクセスが少ない時間帯に実施（深夜、早朝）\n\nリリース管理により、計画的にリリースを実施し、リスクを最小化します。",
      "importance": 4
    },
    {
      "id": "mgmt-2-1-2-fc-10",
      "front": "サービスデスクの役割と特徴は？",
      "back": "サービスデスク（Service Desk）:\nユーザーからの問い合わせやインシデント報告を受け付け、初期対応を行う窓口。\n\n役割:\n①ユーザーからのインシデント報告の受付\n②初期診断と一次対応（パスワードリセット、再起動など）\n③解決できない場合は専門チームへのエスカレーション（機能的エスカレーション）\n④インシデントの記録と追跡（インシデント管理システムに記録）\n⑤サービスリクエストの受付（アカウント作成、ソフトウェアのインストール）\n\n特徴:\n①シングルポイントコンタクト（Single Point of Contact）: ユーザーが最初に連絡する窓口\n②24時間365日対応（必要に応じて）\n③多様な連絡手段: 電話、メール、チャット、ポータルサイト\n\nサービスデスクは、インシデント管理の最前線であり、ユーザー満足度を高める重要な役割を担います。",
      "importance": 5
    },
    {
      "id": "mgmt-2-1-2-fc-11",
      "front": "変更管理が重要な理由は？統計データは？",
      "back": "変更管理が重要な理由:\n①変更は、ITサービスの改善やセキュリティ対策に必要\n②しかし、変更にはサービス中断やトラブルのリスクが伴う\n③計画外の変更や不適切な変更管理が、障害の主な原因\n\n統計データ:\n調査によると、ITサービスの障害の約60～80%は、計画外の変更や不適切な変更管理が原因です。\n\n変更管理の効果:\n①変更のリスクを評価し、承認プロセスを経て実施 → リスクを最小化\n②変更履歴を記録 → トラブル発生時の原因調査が容易\n③ロールバック計画を準備 → 問題が発生したら、すぐに元の状態に戻せる\n④変更カレンダーで調整 → 複数の変更が同時に実施されることを防ぐ\n\n変更管理プロセスに従うことで、変更によるリスクを最小化し、サービスの安定性を確保できます。",
      "importance": 4
    },
    {
      "id": "mgmt-2-1-2-fc-12",
      "front": "サービスサポートの5つのプロセスの連携例は？",
      "back": "具体例: データベースサーバのメモリリーク問題\n\n①インシデント管理:\n- ユーザー報告 → インシデント記録（INC-2025-0010）\n- 一次対応: サーバ再起動（ワークアラウンド）\n- インシデントクローズ\n\n②問題管理:\n- 3回ダウン発生を検出 → 調査依頼（PRB-2025-0001）\n- 根本原因特定: メモリリーク\n- 既知のエラー記録（KE-2025-0001）\n- 恒久的な解決策: クエリ修正\n\n③変更管理:\n- 変更要求提出（RFC-2025-0010）\n- CABで審議・承認\n- 変更計画: テスト → 本番リリース\n\n④リリース管理:\n- リリース計画作成（Release-2025-Q4-002）\n- テスト環境で検証 → 本番環境にデプロイ\n- リリース成功、動作確認\n\n⑤構成管理:\n- CMDB更新（データベースバージョン: 5.7.35 → 5.7.36）\n\nこれらのプロセスが連携し、インシデントの迅速な復旧から根本原因の解決まで、一貫して管理できます。",
      "importance": 5
    }
  ]
}
