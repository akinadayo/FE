{
  "topicId": "mgmt-1-1-4",
  "title": "コスト管理",
  "questions": [
    {
      "id": "mgmt-1-1-4-q1",
      "type": "multiple_choice",
      "question": "プロジェクトの初期段階で、詳細な情報がまだ不明な状況で概算見積りを行う場合、最も適した工数見積り手法はどれですか？",
      "options": [
        "類推見積り(Analogous Estimating)",
        "パラメトリック見積り(Parametric Estimating)",
        "ボトムアップ見積り(Bottom-Up Estimating)",
        "デルファイ法"
      ],
      "correctAnswer": 0,
      "explanation": "「類推見積り(Analogous Estimating)」が正しいです。類推見積りは、過去の類似プロジェクトの実績データを参考に、新しいプロジェクトの工数を見積もる手法です。プロジェクトの初期段階では、詳細な情報(機能の詳細、プログラムの行数など)がまだ分からないため、類推見積りが最も適しています。例えば、過去に開発した「在庫管理システム」(工数:6人月)と似た「受発注管理システム」を開発する場合、「受発注管理システムは在庫管理システムの1.5倍の規模だろう」と判断し、工数を「6人月 × 1.5 = 9人月」と見積もります。選択肢②パラメトリック見積りは、過去の統計データと数式が必要で、ある程度の情報が必要です。③ボトムアップ見積りは、全タスクの詳細な分析が必要で、要件定義完了後に使用します。④デルファイ法は、専門家の意見を集約して見積もる手法ですが、コスト管理の基本的な見積り手法ではありません。"
    },
    {
      "id": "mgmt-1-1-4-q2",
      "type": "multiple_choice",
      "question": "ファンクションポイント法(FP法)において、「ユーザーがシステムにデータを入力する機能」を表す機能種類はどれですか？",
      "options": [
        "外部入力(EI: External Input)",
        "外部出力(EO: External Output)",
        "外部照会(EQ: External inQuiry)",
        "内部論理ファイル(ILF: Internal Logical File)"
      ],
      "correctAnswer": 0,
      "explanation": "「外部入力(EI: External Input)」が正しいです。ファンクションポイント法では、システムの機能を5種類に分類します。①外部入力(EI):ユーザーがシステムにデータを入力する機能(例:商品登録画面、注文入力画面)、②外部出力(EO):システムがデータを加工して出力する機能(例:売上レポート、在庫一覧)、③外部照会(EQ):システムがデータを加工せずに出力する機能(例:商品詳細表示、注文履歴表示)、④内部論理ファイル(ILF):システムが管理するデータファイル(例:商品マスタ、注文データ)、⑤外部インターフェースファイル(EIF):外部システムから参照するデータファイル(例:取引先マスタ)、の5つです。選択肢②外部出力は「データを加工して出力」、③外部照会は「データを加工せずに出力」、④内部論理ファイルは「システムが管理するデータ」を表します。"
    },
    {
      "id": "mgmt-1-1-4-q3",
      "type": "multiple_choice",
      "question": "ファンクションポイント法(FP法)の利点として正しいものはどれですか？",
      "options": [
        "プログラムコードを書いた後でないと見積もれない",
        "プログラミング言語に依存せず、要件定義段階で見積もれる",
        "計算が簡単で、評価者によるばらつきがない",
        "非機能要件(性能、セキュリティ)の評価が得意"
      ],
      "correctAnswer": 1,
      "explanation": "「プログラミング言語に依存せず、要件定義段階で見積もれる」が正しいです。ファンクションポイント法の主な利点は、①プログラミング言語に依存しない(Java、Python、C、どの言語でも同じFP値になる)、②要件定義段階で見積もれる(プログラムコードを書く前に、機能の数と複雑さから見積もれる)、③ユーザーから見た機能で評価するため、理解しやすい、の3つです。選択肢①は誤りで、FP法はプログラムコードを書く前(要件定義段階)に見積もれるのが特徴です。③は誤りで、FP法の計算は複雑で、機能の分類や複雑さの評価に専門知識が必要です。また、評価者によって結果がばらつくという欠点があります。④は誤りで、FP法は非機能要件(性能、セキュリティ)の評価が難しいという欠点があります。"
    },
    {
      "id": "mgmt-1-1-4-q4",
      "type": "multiple_choice",
      "question": "あるECサイト開発プロジェクトで、ファンクションポイント法を使って工数を見積もります。未調整ファンクションポイント(UFP)が80FP、補正係数が1.0、生産性が0.04人月/FPの場合、開発工数はいくらですか？",
      "options": [
        "2.0人月",
        "3.2人月",
        "4.0人月",
        "20.0人月"
      ],
      "correctAnswer": 1,
      "explanation": "「3.2人月」が正しいです。ファンクションポイント法の開発工数の計算手順は、①未調整FP(UFP)を計算、②補正係数を適用して調整FP(AFP)を計算、③生産性を掛けて開発工数を計算、の3ステップです。この問題では、UFP=80FP、補正係数=1.0、生産性=0.04人月/FPが与えられています。\n\n【計算】\n①調整FP(AFP)の計算:\nAFP = UFP × 補正係数 = 80FP × 1.0 = 80FP\n\n②開発工数の計算:\n開発工数 = AFP × 生産性 = 80FP × 0.04人月/FP = 3.2人月\n\nしたがって、開発工数は3.2人月です。選択肢①2.0人月は計算が間違っています。③4.0人月は生産性を0.05人月/FPと誤って計算した結果です。④20.0人月は計算式を間違えています(80÷0.04ではなく、80×0.04が正しい)。"
    },
    {
      "id": "mgmt-1-1-4-q5",
      "type": "multiple_choice",
      "question": "LOC法(Lines Of Code法)の欠点として正しいものはどれですか？",
      "options": [
        "過去のプロジェクトデータが不要で、簡単に見積もれる",
        "プログラミング言語に依存せず、要件定義段階で見積もれる",
        "プログラミング言語に依存し、詳細設計後でないと行数が分からない",
        "計算が複雑で、専門知識が必要"
      ],
      "correctAnswer": 2,
      "explanation": "「プログラミング言語に依存し、詳細設計後でないと行数が分からない」が正しいです。LOC法(Lines Of Code法)は、プログラムの「行数」から開発工数を見積もる手法ですが、以下の欠点があります。①プログラミング言語に依存する(言語ごとに生産性が異なる。Java 1000行とPython 1000行では開発工数が異なる)、②詳細設計後でないと行数が分からない(要件定義段階では使えない)、③プログラマーの書き方によって行数が変わる(簡潔に書けば行数が減るため、精度が低い)、という問題があります。選択肢①は誤りで、LOC法は過去のプロジェクトデータ(生産性:行数/人月)が必要です。②は誤りで、LOC法はプログラミング言語に依存し、要件定義段階では使えません(ファンクションポイント法の特徴です)。④は誤りで、LOC法の計算は簡単です(行数÷生産性=工数)。"
    },
    {
      "id": "mgmt-1-1-4-q6",
      "type": "multiple_choice",
      "question": "COCOMO(Constructive Cost Model)において、「中規模で、ある程度の経験があるチームが、一般的な業務システムを開発する」場合のプロジェクトの種類はどれですか？",
      "options": [
        "組込み型(Organic):a=2.4、b=1.05",
        "半分離型(Semi-Detached):a=3.0、b=1.12",
        "組込み型(Embedded):a=3.6、b=1.20",
        "複合型(Hybrid):a=2.8、b=1.10"
      ],
      "correctAnswer": 1,
      "explanation": "「半分離型(Semi-Detached):a=3.0、b=1.12」が正しいです。COCOMOでは、プロジェクトを3種類に分類します。①組込み型(Organic):小規模で経験豊富なチーム、要件が明確。a=2.4、b=1.05。例:社内の小規模業務システム。②半分離型(Semi-Detached):中規模、ある程度の経験。a=3.0、b=1.12。例:ECサイト、一般的な業務システム。③組込み型(Embedded):大規模で複雑、ハードウェアとの連携が必要。a=3.6、b=1.20。例:航空機の制御システム、組込みシステム。問題文の「中規模で、ある程度の経験があるチームが、一般的な業務システムを開発する」という条件は、半分離型(Semi-Detached)に該当します。選択肢①組込み型(Organic)は小規模プロジェクト、③組込み型(Embedded)は大規模・複雑なプロジェクトに該当します。④複合型(Hybrid)は、COCOMOの標準的な分類には存在しません。"
    },
    {
      "id": "mgmt-1-1-4-q7",
      "type": "multiple_choice",
      "question": "COCOMO(Basic COCOMO)を使って、半分離型(Semi-Detached)のプロジェクト(予想行数:30,000行)の開発工数を計算します。a=3.0、b=1.12の場合、開発工数はおよそいくらですか？(KLOC=30として計算)",
      "options": [
        "約90人月",
        "約120人月",
        "約130人月",
        "約150人月"
      ],
      "correctAnswer": 1,
      "explanation": "「約120人月」が正しいです。COCOMOの計算式は、開発工数(人月) = a × (KLOC)^b です。KLOC(キロ・ライン・オブ・コード) = プログラムの行数 ÷ 1000です。この問題では、予想行数=30,000行、a=3.0、b=1.12が与えられています。\n\n【計算】\n①KLOCの計算:\nKLOC = 30,000行 ÷ 1000 = 30\n\n②開発工数の計算:\n開発工数 = 3.0 × (30)^1.12\n(30)^1.12 ≒ 39.8(電卓で計算)\n開発工数 = 3.0 × 39.8 ≒ 119.4人月 ≒ 120人月\n\nしたがって、開発工数は約120人月です。選択肢①約90人月は、bを1.0と誤って計算した結果(3.0×30=90)です。③約130人月と④約150人月は計算が間違っています。bが1より大きい場合、規模が大きくなるほど工数が非線形に増加します(規模が2倍になっても、工数は2倍以上になる)。"
    },
    {
      "id": "mgmt-1-1-4-q8",
      "type": "multiple_choice",
      "question": "EVM(Earned Value Management)において、「現時点で実際に完了した作業のコスト(予算ベース)」を表す指標はどれですか？",
      "options": [
        "計画値(PV: Planned Value)",
        "実績値(AC: Actual Cost)",
        "出来高(EV: Earned Value)",
        "総予算(BAC: Budget At Completion)"
      ],
      "correctAnswer": 2,
      "explanation": "「出来高(EV: Earned Value)」が正しいです。EVM(Earned Value Management)では、プロジェクトの進捗とコストを管理するために、3つの基本指標を使用します。①計画値(PV: Planned Value):現時点で完了しているべき作業のコスト(予算ベース)、②実績値(AC: Actual Cost):現時点で実際に使ったコスト、③出来高(EV: Earned Value):現時点で実際に完了した作業のコスト(予算ベース)、の3つです。例えば、プロジェクト(総予算:100万円)の第5週終了時点で、①PV=50万円(計画では50万円分の作業が完了しているべき)、②AC=60万円(実際に60万円使った)、③EV=40万円(実際には40万円分の作業しか完了していない)、という状況の場合、EVは40万円です。選択肢①PVは「完了しているべき作業のコスト」、②ACは「実際に使ったコスト」、④BACは「プロジェクトの総予算」を表します。"
    },
    {
      "id": "mgmt-1-1-4-q9",
      "type": "multiple_choice",
      "question": "あるプロジェクト(総予算:200万円)の第8週終了時点で、PV=120万円、EV=100万円、AC=140万円でした。このプロジェクトのコスト効率指数(CPI)とスケジュール効率指数(SPI)はいくらですか？また、プロジェクトの状況として最も適切なものはどれですか？",
      "options": [
        "CPI=0.71、SPI=0.83 → コストオーバーで進捗が遅れている",
        "CPI=1.40、SPI=1.20 → 予算内で進捗が早い",
        "CPI=0.83、SPI=1.20 → コストオーバーだが進捗が早い",
        "CPI=1.20、SPI=0.83 → 予算内だが進捗が遅れている"
      ],
      "correctAnswer": 0,
      "explanation": "「CPI=0.71、SPI=0.83 → コストオーバーで進捗が遅れている」が正しいです。EVMの評価指標の計算式は、①コスト効率指数(CPI: Cost Performance Index) = EV ÷ AC、②スケジュール効率指数(SPI: Schedule Performance Index) = EV ÷ PV、です。この問題では、PV=120万円、EV=100万円、AC=140万円が与えられています。\n\n【計算】\n①CPI = EV ÷ AC = 100万円 ÷ 140万円 ≒ 0.71\n → 1より小 → コスト効率が悪い(1円の価値を生み出すのに約1.4円使っている)。\n\n②SPI = EV ÷ PV = 100万円 ÷ 120万円 ≒ 0.83\n → 1より小 → 進捗が遅れている(計画の83%しか完了していない)。\n\n【状況】\nCPI=0.71(<1)なので、コストオーバー。SPI=0.83(<1)なので、進捗が遅れている。したがって、このプロジェクトは「コストオーバーで進捗が遅れている」状況です。選択肢②③④は、CPIやSPIの計算が間違っているか、解釈が間違っています。"
    },
    {
      "id": "mgmt-1-1-4-q10",
      "type": "multiple_choice",
      "question": "あるプロジェクト(総予算:BAC=300万円)の途中経過で、実績値AC=180万円、コスト効率指数CPI=0.75でした。現在のコスト効率が続くと仮定した場合、完成時総コスト見積り(EAC)はいくらですか？また、完成時コスト差異(VAC)はいくらですか？",
      "options": [
        "EAC=225万円、VAC=+75万円(予算内)",
        "EAC=400万円、VAC=-100万円(予算オーバー)",
        "EAC=360万円、VAC=-60万円(予算オーバー)",
        "EAC=240万円、VAC=+60万円(予算内)"
      ],
      "correctAnswer": 1,
      "explanation": "「EAC=400万円、VAC=-100万円(予算オーバー)」が正しいです。EVMの完成時総コスト見積り(EAC: Estimate At Completion)と完成時コスト差異(VAC: Variance At Completion)の計算式は、①EAC = BAC ÷ CPI、②VAC = BAC - EAC、です。この問題では、BAC=300万円、AC=180万円、CPI=0.75が与えられています。\n\n【計算】\n①EAC = BAC ÷ CPI = 300万円 ÷ 0.75 = 400万円\n → 現在のコスト効率(CPI=0.75)が続くと仮定すると、プロジェクト完了時の総コストは400万円になる。\n\n②VAC = BAC - EAC = 300万円 - 400万円 = -100万円\n → 負の値 → プロジェクト完了時に予算を100万円オーバーする見込み。\n\n【解釈】\nCPI=0.75(<1)は、コスト効率が悪いことを意味します(1円の価値を生み出すのに約1.33円使っている)。このままのペースでプロジェクトを進めると、最終的に400万円かかり、予算300万円を100万円オーバーする見込みです。したがって、是正措置(要件の見直し、作業の効率化、増員)が必要です。選択肢①③④は、EACやVACの計算が間違っています。"
    }
  ]
}
