{
  "topicId": "tech-3-5-3",
  "title": "認証とアクセス制御",
  "questions": [
    {
      "id": "tech-3-5-3-q1",
      "type": "multiple_choice",
      "question": "認証の三要素のうち、「知識（Something You Know）」に分類されるものはどれですか？",
      "options": [
        "指紋認証",
        "ICカード",
        "パスワード",
        "スマートフォン"
      ],
      "correctAnswer": 2,
      "explanation": "「パスワード」が正しいです。認証の三要素は、①知識（Something You Know）: 本人だけが知っている情報（パスワード、暗証番号、秘密の質問）、②所有物（Something You Have）: 本人だけが持っている物（ICカード、スマートフォン、ワンタイムパスワードトークン）、③生体（Something You Are）: 本人の身体的特徴（指紋、顔、虹彩、声紋、静脈パターン）、に分類されます。選択肢①指紋認証は生体、②ICカードは所有物、④スマートフォンは所有物に分類されます。多要素認証では、これらの3要素のうち、2つ以上を組み合わせて認証することで、セキュリティ強度を高めます。"
    },
    {
      "id": "tech-3-5-3-q2",
      "type": "multiple_choice",
      "question": "パスワードをハッシュ化して保存する主な理由として最も適切なものはどれですか？",
      "options": [
        "パスワードの入力速度を向上させるため",
        "データベースの容量を削減するため",
        "データベースが漏洩してもパスワードを解読されにくくするため",
        "パスワードの強度を自動的に強化するため"
      ],
      "correctAnswer": 2,
      "explanation": "「データベースが漏洩してもパスワードを解読されにくくするため」が正しいです。パスワードを平文（元のパスワード）で保存すると、データベースが漏洩した際にパスワードがそのまま読み取られてしまいます。ハッシュ化（一方向暗号化）することで、ハッシュ値から元のパスワードを逆算することが困難になります。ハッシュ関数（SHA-256など）は一方向関数であり、ハッシュ値から元の値を復元することはできません。ログイン時は、入力されたパスワードをハッシュ化し、保存されているハッシュ値と比較することで認証します。さらにセキュリティを高めるため、ソルト（ランダムな文字列）を追加してハッシュ化し、レインボーテーブル攻撃を防ぐことが推奨されます。選択肢①②④は、ハッシュ化の目的ではありません。"
    },
    {
      "id": "tech-3-5-3-q3",
      "type": "multiple_choice",
      "question": "次のパスワード攻撃のうち、「他のサービスから漏洩したユーザーID・パスワードのリストを使い、複数のサービスで試す攻撃」はどれですか？",
      "options": [
        "総当たり攻撃（Brute Force Attack）",
        "辞書攻撃（Dictionary Attack）",
        "パスワードリスト攻撃",
        "レインボーテーブル攻撃"
      ],
      "correctAnswer": 2,
      "explanation": "「パスワードリスト攻撃」が正しいです。パスワードリスト攻撃は、他のサービスから漏洩したユーザーID・パスワードのリストを使い、複数のサービスでログインを試みる攻撃です。多くのユーザーが複数のサービスで同じパスワードを使い回しているため、この攻撃は非常に効果的です。対策は、同じパスワードを複数のサービスで使い回さないことです。選択肢①総当たり攻撃は、考えられる全てのパスワードを試す攻撃（対策: パスワードを長く複雑にする、ログイン失敗回数を制限）、②辞書攻撃は、辞書にある単語や、よく使われるパスワードのリストを試す攻撃（対策: 辞書にない文字列を使う）、④レインボーテーブル攻撃は、事前計算されたハッシュ値のテーブルを使い、ハッシュ値から元のパスワードを逆引きする攻撃（対策: ソルトを追加してハッシュ化）、です。"
    },
    {
      "id": "tech-3-5-3-q4",
      "type": "multiple_choice",
      "question": "バイオメトリクス認証において、「本人を誤って拒否する確率」を示す指標はどれですか？",
      "options": [
        "FAR（False Acceptance Rate）",
        "FRR（False Rejection Rate）",
        "EER（Equal Error Rate）",
        "CER（Crossover Error Rate）"
      ],
      "correctAnswer": 1,
      "explanation": "「FRR（False Rejection Rate）」が正しいです。FRRは本人拒否率であり、本人を誤って拒否する確率を示します。例えば、指紋認証で本人の指紋を読み取っても、認証が失敗する場合があります（手が濡れている、センサーが汚れているなど）。選択肢①FAR（False Acceptance Rate）は他人受入率であり、他人を誤って受け入れる確率を示します。FRRを下げると、FARが上がり、その逆も成り立ちます（トレードオフの関係）。③EER（Equal Error Rate）は等価エラー率であり、FRRとFARが等しくなる点を示します。EERが低いほど精度が高いと言えます。④CER（Crossover Error Rate）はEERの別名です。バイオメトリクス認証の精度は、これらの指標で評価されます。"
    },
    {
      "id": "tech-3-5-3-q5",
      "type": "multiple_choice",
      "question": "多要素認証の組み合わせとして適切なものはどれですか？",
      "options": [
        "パスワード + 秘密の質問（両方とも知識要素）",
        "パスワード + スマートフォンのワンタイムパスワード（知識 + 所有物）",
        "指紋認証 + 顔認証（両方とも生体要素）",
        "ICカード + スマートフォン（両方とも所有物要素）"
      ],
      "correctAnswer": 1,
      "explanation": "「パスワード + スマートフォンのワンタイムパスワード（知識 + 所有物）」が正しいです。多要素認証（MFA: Multi-Factor Authentication）とは、認証の三要素（知識、所有物、生体）のうち、2つ以上の異なる要素を組み合わせて認証する方式です。選択肢②は、知識要素（パスワード）と所有物要素（スマートフォンのワンタイムパスワード）を組み合わせており、適切な多要素認証です。選択肢①は両方とも知識要素、③は両方とも生体要素、④は両方とも所有物要素であり、異なる要素を組み合わせていないため、多要素認証とは言えません（単一要素の複数利用）。多要素認証により、1つの要素が破られても、他の要素で防御できるため、セキュリティが大幅に向上します（Microsoftの調査によると、二要素認証により99.9%の自動攻撃を防げるとされています）。"
    },
    {
      "id": "tech-3-5-3-q6",
      "type": "multiple_choice",
      "question": "TOTP（Time-based One-Time Password）の特徴として正しいものはどれですか？",
      "options": [
        "カウンタ（ログイン回数）と秘密鍵を使って生成され、無期限で有効",
        "現在時刻と秘密鍵を使って生成され、30秒～1分で無効になる",
        "サーバがランダムに生成し、SMSで送信される",
        "QRコードをスキャンするたびに新しいパスワードが生成される"
      ],
      "correctAnswer": 1,
      "explanation": "「現在時刻と秘密鍵を使って生成され、30秒～1分で無効になる」が正しいです。TOTP（Time-based One-Time Password）は、時刻ベースのワンタイムパスワード生成方式で、現在時刻と秘密鍵を使って6桁のワンタイムパスワードを生成します。一定時間（通常30秒～1分）で新しいワンタイムパスワードが生成されるため、盗聴されても再利用できません。TOTPは、Google Authenticator、Microsoft Authenticatorなどのスマートフォンアプリで広く使われています。選択肢①は、HOTP（HMAC-based One-Time Password）の説明です。HOTPは、カウンタと秘密鍵を使って生成され、1回使用するまで無期限で有効です。選択肢③は、SMS送信方式の説明です。選択肢④は誤りで、QRコードは登録時に秘密鍵を転送するために使われますが、パスワード生成には現在時刻と秘密鍵が使われます。"
    },
    {
      "id": "tech-3-5-3-q7",
      "type": "multiple_choice",
      "question": "CAPTCHA（キャプチャ）の主な目的として最も適切なものはどれですか？",
      "options": [
        "パスワードの強度を測定する",
        "人間とボット（自動プログラム）を区別する",
        "ユーザーの入力速度を計測する",
        "ユーザーの視力を検査する"
      ],
      "correctAnswer": 1,
      "explanation": "「人間とボット（自動プログラム）を区別する」が正しいです。CAPTCHA（Completely Automated Public Turing test to tell Computers and Humans Apart）は、人間とボットを区別するための認証技術です。CAPTCHAの目的は、①スパム投稿の防止（掲示板、コメント欄）、②総当たり攻撃の防止（ログイン画面）、③自動登録の防止（無料サービスの大量登録）、などです。CAPTCHAの種類は、①テキストCAPTCHA（歪んだ文字列を読み取る）、②画像CAPTCHA（「信号機を全て選択してください」などの画像選択）、③reCAPTCHA v2（「私はロボットではありません」のチェックボックス）、④reCAPTCHA v3（バックグラウンドでユーザーの行動を分析し、スコア化）、などがあります。reCAPTCHA v3は、ユーザーが画像選択などの操作をする必要がなく、シームレスに認証できます。選択肢①③④は、CAPTCHAの目的ではありません。"
    },
    {
      "id": "tech-3-5-3-q8",
      "type": "multiple_choice",
      "question": "シングルサインオン（SSO）の利点として適切でないものはどれですか？",
      "options": [
        "ユーザーは複数のパスワードを覚える必要がなくなる",
        "パスワードの使い回しを防ぎ、セキュリティが向上する",
        "認証サーバが停止しても、各システムに個別にログインできる",
        "ユーザー管理を集中化でき、管理コストが削減できる"
      ],
      "correctAnswer": 2,
      "explanation": "「認証サーバが停止しても、各システムに個別にログインできる」が誤りです。シングルサインオン（SSO）では、認証サーバ（IDプロバイダ）が認証を一元管理します。そのため、認証サーバが停止すると、全てのシステムにアクセスできなくなります（シングルポイント障害）。これはSSOのデメリットです。対策として、認証サーバの冗長化（複数のサーバを用意）が必要です。選択肢①②④は、SSOの利点です。①ユーザーは1回のログインで複数のシステムにアクセスできるため、複数のパスワードを覚える必要がありません。②統一的なパスワードポリシー（パスワードの複雑さ、有効期限）を適用でき、パスワードの使い回しを防ぎます。④ユーザー管理（アカウントの追加・削除、権限の変更）を認証サーバで集中管理できるため、管理コストが削減できます。"
    },
    {
      "id": "tech-3-5-3-q9",
      "type": "multiple_choice",
      "question": "OAuth 2.0において、ユーザーがサードパーティアプリにリソースへのアクセス権限を委譲する際に発行されるものはどれですか？",
      "options": [
        "パスワード",
        "アクセストークン",
        "公開鍵証明書",
        "SAMLアサーション"
      ],
      "correctAnswer": 1,
      "explanation": "「アクセストークン」が正しいです。OAuth 2.0では、ユーザーがサードパーティアプリ（例: オンライン写真共有サービス）に、リソース（例: Googleのプロフィール情報）へのアクセス権限を委譲する際、アクセストークンが発行されます。OAuth 2.0の流れは、①ユーザーがサードパーティアプリで「Googleアカウントでログイン」をクリック、②サードパーティアプリがユーザーをGoogleの認証ページにリダイレクト、③ユーザーがGoogleアカウントでログインし、「許可」をクリック、④Googleが認可コードを発行、⑤サードパーティアプリが認可コードを使って、Googleからアクセストークンを取得、⑥サードパーティアプリがアクセストークンを使って、GoogleのAPIにアクセスし、プロフィール情報を取得、という流れです。アクセストークンは有効期限があり（例: 1時間）、漏洩しても被害を最小限に抑えられます。ユーザーはGoogleのパスワードをサードパーティアプリに渡す必要がありません。選択肢④SAMLアサーションは、SAML方式で使われる認証情報です。"
    },
    {
      "id": "tech-3-5-3-q10",
      "type": "multiple_choice",
      "question": "ロールベースアクセス制御（RBAC）の説明として最も適切なものはどれですか？",
      "options": [
        "データの所有者が、他のユーザーのアクセス権限を自由に決定する方式",
        "システム管理者が、セキュリティレベルに基づいてアクセス権限を決定する方式",
        "ユーザーの役割（ロール）に基づいてアクセス権限を決定する方式",
        "ユーザーの生体情報に基づいてアクセス権限を決定する方式"
      ],
      "correctAnswer": 2,
      "explanation": "「ユーザーの役割（ロール）に基づいてアクセス権限を決定する方式」が正しいです。ロールベースアクセス制御（RBAC: Role-Based Access Control）は、ユーザーの役割（ロール）に基づいてアクセス権限を決定する方式です。ユーザーにロール（例: システム管理者、商品管理者、注文管理者、カスタマーサポート）を割り当て、ロールに対してアクセス権限を設定します。RBACの利点は、①管理が容易（ユーザー数が多くても、ロール単位で権限を管理できる）、②柔軟性（ユーザーの異動や役割変更に対応しやすい）、③最小権限の原則（必要最小限の権限を付与できる）、です。RBACは、大規模な企業システムやクラウドサービス（AWS IAM、Azure RBAC）で広く使われています。選択肢①は、任意アクセス制御（DAC）の説明です。選択肢②は、強制アクセス制御（MAC）の説明です。選択肢④は誤りで、生体情報は認証に使われますが、アクセス権限の決定には使われません。"
    }
  ]
}
